{"version":3,"file":"static/js/521.7513adf9.chunk.js","mappings":"q5CAEYA,E,iDCAIC,I,2BACXC,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAEH,IAAIC,GAAQC,EAAAA,EAAAA,QAAZ,GAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRF,EAAAA,QAAAA,IACC,CAFHE,KAIOC,EAAAA,EAAAA,cACL,YACE,qBAAgBH,EAAhB,wBAA+B,KAAtBI,EAAsB,QAC7B,MAAIA,IACJ,oBAAWA,EAAoBA,EAA/B,GACKA,EAAAA,QAAAA,MAGT,CARF,I,SCRcC,EAAyBC,GAIvC,I,QAHIC,EAASD,EAAb,cACIE,EAAJ,KAEOD,KAAYA,aAAnB,sBACMA,aAAJ,oBAAyCC,EAAAA,GACzCD,EAASA,EAATA,cAGF,IAAIE,EAAgB,eAAG,SAAAF,QAAA,gCAAH,EACpB,QAAIE,IAKN,SAAuBH,GACrB,MAAc,OAAO,EAErB,IAAII,EAAWJ,EAAf,uBAEA,YAAOI,GAAmB,CACxB,GAAIA,aAAJ,kBAA2C,OAAO,EAClDA,EAAWA,EAAXA,uBAGF,SAfwBC,CAAxB,KAEA,GFbF,SAAYd,GACVA,EAAAA,MAAAA,IACAA,EAAAA,MAAAA,QACAA,EAAAA,OAAAA,SACAA,EAAAA,UAAAA,YAEAA,EAAAA,UAAAA,YACAA,EAAAA,QAAAA,UACAA,EAAAA,WAAAA,aACAA,EAAAA,UAAAA,YAEAA,EAAAA,KAAAA,OACAA,EAAAA,IAAAA,MAEAA,EAAAA,OAAAA,SACAA,EAAAA,SAAAA,WAEAA,EAAAA,IAAAA,MAjBF,CAAYA,IAAAA,EAAZ,K,iCGAgBe,EACdC,EACAC,EACAC,GAEA,IAAIC,GAAcf,EAAAA,EAAAA,QAAlB,GACAe,EAAAA,QAAAA,GAEAd,EAAAA,EAAAA,YAAU,WACR,cACEc,EAAAA,QAAAA,KAAAA,OAAAA,GAIF,OADAC,OAAAA,iBAAAA,EAAAA,EAAAA,GACO,kBAAMA,OAAAA,oBAAAA,EAAAA,EAAN,MACN,CAACJ,EAPJX,ICNF,IAqBYgB,EAoBAC,EAcZ,EAUYC,EAjERC,EAAoB,CAAC,yBAAD,wJAiBhB,SAAAC,GAAQ,OAAOA,EAAP,2BAjBQ,KAAxB,K,SAgGgBC,EAAajB,GAC3BA,MAAAA,GAAAA,EAAAA,MAAe,CAAEkB,eAAe,I,SAGlBC,EAAQC,EAAwCC,GAC9D,IAAIC,EAAWC,MAAA,WACXH,EAAA,cAAuB,cACrB,IAAII,EAAWC,EAAAA,wBAAf,GAEA,OAAID,EAAWE,KAAf,6BAAiD,EAC7CF,EAAWE,KAAf,4BAAwD,EACxD,K,SA/C6BN,GACnC,YADmCA,IAAAA,IAAAA,EAAgCO,SAASC,MAC5E,MAAIR,EAA0B,GACvBG,MAAAA,KAAWH,EAAAA,iBAAlB,IA+CIS,CARJ,GASIC,EAASH,SAAb,cAEII,EAAa,WACf,GAAIV,GAAST,EAAAA,MAAcA,EAA3B,MAAwC,OAAOoB,EAAP,KACxC,GAAIX,GAAST,EAAAA,SAAiBA,EAA9B,MAA2C,OAAOoB,EAAP,SAE3C,MAAM,IAAIC,MAAV,iEAJe,GAObC,EAAc,WAChB,GAAIb,EAAQT,EAAZ,MAAyB,OAAO,EAChC,GAAIS,EAAQT,EAAZ,SAA4B,OAAOuB,KAAAA,IAAAA,EAAYb,EAAAA,QAAZa,IAAP,EAC5B,GAAId,EAAQT,EAAZ,KAAwB,OAAOuB,KAAAA,IAAAA,EAAYb,EAAAA,QAAZa,IAAP,EACxB,GAAId,EAAQT,EAAZ,KAAwB,OAAOU,EAAAA,OAAP,EAExB,MAAM,IAAIW,MAAV,iEANgB,GASdG,EAAef,EAAQT,EAAR,SAAyB,CAAEM,eAAe,GAA7D,GAEImB,EAAJ,EACIC,EAAQhB,EAAZ,OACIiB,OAAJ,EACA,EAAG,OAED,GAAIF,GAAAA,GAAmBA,EAAAA,GAAvB,EAA4C,OAAOxB,EAAP,MAE5C,IAAI2B,EAAUN,EAAd,EAEA,GAAIb,EAAQT,EAAZ,WACE4B,GAAWA,EAAD,GAAVA,MACK,CACL,GAAIA,EAAJ,EAAiB,OAAO3B,EAAP,UACjB,GAAI2B,GAAJ,EAAsB,OAAO3B,EAAP,SAMxB,SAHA0B,EAAOjB,EAbN,KAgBD,QAhBC,GAmBDe,GAAAA,QACOE,IAASZ,SApBlB,eA+BA,OAFKY,EAAAA,aAAL,aAAoCA,EAAAA,aAAAA,WAAAA,KAE7B1B,EAAP,SA/IF,SAAYD,GAEVA,EAAAA,EAAAA,MAAAA,GAAAA,QAGAA,EAAAA,EAAAA,SAAAA,GAAAA,WAGAA,EAAAA,EAAAA,KAAAA,GAAAA,OAGAA,EAAAA,EAAAA,KAAAA,GAAAA,OAGAA,EAAAA,EAAAA,WAAAA,IAAAA,aAGAA,EAAAA,EAAAA,SAAAA,IAAAA,WAjBF,CAAYA,IAAAA,EAAZ,KAoBA,SAAYC,GAEVA,EAAAA,EAAAA,MAAAA,GAAAA,QAGAA,EAAAA,EAAAA,SAAAA,GAAAA,WAGAA,EAAAA,EAAAA,QAAAA,GAAAA,UAGAA,EAAAA,EAAAA,UAAAA,GAAAA,YAXF,CAAYA,IAAAA,EAAZ,KAcA,SAAKmB,GACHA,EAAAA,EAAAA,UAAAA,GAAAA,WACAA,EAAAA,EAAAA,KAAAA,GAAAA,OAFF,CAAKA,IAAAA,EAAL,KAUA,SAAYlB,GAEVA,EAAAA,EAAAA,OAAAA,GAAAA,SAGAA,EAAAA,EAAAA,MAAAA,GAAAA,QALF,CAAYA,IAAAA,EAAZ,K,ICzDY2B,E,mBAoBIC,EACdtB,EACAuB,EAAAA,QAAAA,IAAAA,IAAAA,EAAqBF,EAASG,K,iBAO1B,KALFC,EAAAA,EAAAA,aACAC,EAAAA,EAAAA,WAMEC,GAAiBpD,EAAAA,EAAAA,QACD,qBAAXgB,OAA0BgB,SAAjC,cADF,MAGIqB,GAAwBrD,EAAAA,EAAAA,QAA5B,MACIsD,GAAUC,EAAAA,EAAAA,KAEVC,EAAuBC,QAAQT,EAAWF,EAA9C,cACIY,EAAuBD,QAAQT,EAAWF,EAA9C,eAGA7C,EAAAA,EAAAA,YAAU,WACR,IAEAmD,EAAAA,QAAyBpB,SAAzBoB,iBACC,CAJHnD,KAOAA,EAAAA,EAAAA,YAAU,WACR,KAEA,OAAO,WACLqB,EAAa8B,EAAb9B,SACA8B,EAAAA,QAAAA,QAED,CAPHnD,KAUAA,EAAAA,EAAAA,YAAU,WACR,MACKwB,EAAL,SAEA,IAAIkC,EAAgB3B,SAApB,cAEA,SAAIkB,OAAJ,EAAIA,EAAJ,SACE,IAAI,MAAAA,OAAA,EAAAA,EAAA,WAAJ,EAA6C,YAC3CG,EAAAA,QAAAA,QAGG,GAAI5B,EAAAA,QAAAA,SAAJ,GAA+C,YACpD4B,EAAAA,QAAAA,IAKF,MAAIH,OAAJ,EAAIA,EAAJ,SACE5B,EAAa4B,EAAb5B,SAEIE,EAAQC,EAAD,QAAoBR,EAAM2C,SAAW1C,EAAYoB,OAC1DuB,QAAAA,KAAAA,4DAIJR,EAAAA,QAAgCrB,SAAhCqB,iBACC,CAAC5B,EAAWyB,EA1BfjD,IA6BAU,EAAe,WAAW,SAAAmD,GAClBd,EAAWF,EAAjB,SAEKrB,EAAL,SACIqC,EAAAA,MAAclE,EAAKmE,MAEvBD,EAAAA,iBAGEtC,EACEC,EADK,SAEJqC,EAAAA,SAAiB7C,EAAM+C,SAAW/C,EAAMgD,MAAQhD,EAAMiD,cACnDhD,EAAYiD,UAElBd,EAAAA,QAAgCrB,SAAhCqB,mBAKJ1C,EAAe,SAEb,SAAAmD,GACE,GAAMd,EAAWF,EAAjB,WAEA,IAAIsB,EAAgB,IAAIC,IAAJ,MAAQlB,OAAR,EAAQA,EAA5B,SAGA,GAFAiB,EAAAA,IAAAA,GAEKA,EAAL,MAEA,IAAI3D,EAAW4C,EAAf,QACA,MACKC,EAAL,SAEA,IAAIgB,EAAYR,EAAhB,OAEIQ,GAAaA,aAAjB,aAiBN,SAAkBnB,EAAlB,GACE,uCAAkC,OAChC,YADgC,QAChC,gBAAI1B,EAAAA,SAAJ,GAA0C,OAAO,EAGnD,SArBW8C,CAASH,EAAd,IACEN,EAAAA,iBACAA,EAAAA,kBACAxC,EAAAA,KAEA+B,EAAAA,QAAAA,EACA/B,EAAAA,IAGFA,EAAa+B,EAAb/B,eA1BNX,IA1GF,SAAYmC,GAEVA,EAAAA,EAAAA,KAAAA,GAAAA,OAGAA,EAAAA,EAAAA,aAAAA,GAAAA,eAGAA,EAAAA,EAAAA,QAAAA,GAAAA,UAGAA,EAAAA,EAAAA,UAAAA,GAAAA,YAGAA,EAAAA,EAAAA,aAAAA,IAAAA,eAGAA,EAAAA,EAAAA,IAAAA,IAAAA,MAjBF,CAAYA,IAAAA,EAAZ,K,cCTI0B,EAAgB,IAApB,IACIC,EAAY,IAAhB,IAEA,SAASC,EAAMrE,GACbA,EAAAA,aAAAA,cAAAA,QAEAA,EAAAA,OAAAA,EAGF,SAASsE,EAAQtE,GACf,IAAIuE,EAAWH,EAAAA,IAAf,GACA,IAEA,OAAIG,EAAAA,eAAkCvE,EAAAA,gBAAtC,eACKA,EAAAA,aAAAA,cAAoCuE,EAApCvE,gBAELA,EAAAA,MAAgBuE,EAAhBvE,OCXF,IAAIwE,GAAyBC,EAAAA,EAAAA,gBAA7B,G,SAWgBC,EAAgBC,GAC9B,OACE,gBAACH,EAAD,UAAiCI,MAAOD,EAAME,OAC3CF,EAFL,U,cCDF,SAASG,IACP,IAAIC,GDTGC,EAAAA,EAAAA,YAAP,GCUIC,GAAcD,EAAAA,EAAAA,YAAlB,G,GAC0BE,EAAAA,EAAAA,WAAS,WAEjC,IAAKH,GAAL,OAAoBE,EAAsB,OAAO,KAGjD,wBAAWtE,OAAwB,OAAO,KAC1C,IAAIwE,EAAexD,SAAAA,eAAnB,0BACA,KAAkB,OAAOwD,EAEzB,IAAIC,EAAOzD,SAAAA,cAAX,OAEA,OADAyD,EAAAA,aAAAA,KAAAA,0BACOzD,SAAAA,KAAAA,YAAP,MAXG0D,EAAAA,EAAAA,GAAQC,EAAAA,EAAAA,GA6Bb,OAdA1F,EAAAA,EAAAA,YAAU,WACR,OAAIyF,IAEC1D,SAAAA,KAAAA,SAAL,IACEA,SAAAA,KAAAA,YAAAA,MAED,CANH/B,KAQAA,EAAAA,EAAAA,YAAU,WACR,GACA,OAAIqF,GACJK,EAAUL,EAAVK,WACC,CAACL,EAAaK,EAJjB1F,IAMA,EAKF,IAAI2F,EAAJ,W,SAGgBC,EACdb,GAEA,IAAIc,EAAJ,EACIJ,EAASP,IACR9E,GAAWkF,EAAAA,EAAAA,WAAgC,iBAC5B,qBAAXvE,OAAyB,KAAOgB,SAAAA,cADO,UAA3C3B,GAID0F,GAAQC,EAAAA,EAAAA,KAoBZ,OAlBAC,EAAAA,EAAAA,IAAoB,WAClB,MACA,EAIA,OAFAP,EAAAA,YAAAA,GAEO,WAM8B,MALnC,IACA,IAEAA,EAAAA,YAAAA,GAEIA,EAAAA,WAAAA,QAAJ,IACE,SAAAA,EAAA,8BAAAA,SAGH,CAACA,EAhBJO,IAkBA,GAEQP,GAAD,GAEHQ,EAAAA,EAAAA,eACEC,EAAAA,EAAAA,IAAO,CAAEnB,MAAF,EAA2BoB,WAA3B,EAA2DC,KAAM,WAH9E,GAFmB,KAYrB,IAAIC,EAAJ,WAGIC,GAAqBzB,EAAAA,EAAAA,eAAzB,MAsBAe,EAAAA,MApBA,Y,IAKQH,EAAgCV,EAAhCU,OAAWI,GAAAA,EAAAA,EAAAA,IAAqBd,EAAAA,CAAAA,WAEtC,OACE,gBAACuB,EAAD,UAA6BtB,MAAOS,IACjCS,EAAAA,EAAAA,IAAO,CACNnB,MADM,EAENoB,WAFM,EAGNC,KAAM,oBC5Fd,IAAIG,GAAqB1B,EAAAA,EAAAA,eAAzB,MAIA,SAAS2B,IACP,IAAIC,GAAUrB,EAAAA,EAAAA,YAAd,GACA,UAAIqB,EAAkB,CACpB,IAAIC,EAAM,IAAIrE,MAAd,iFAIA,MADIA,MAAJ,mBAA6BA,MAAAA,kBAAAA,EAAAA,GAC7B,EAEF,S,IClBUsE,E,ECgBZ,EASA,E,UD5BIC,GAAe/B,EAAAA,EAAAA,gBAAwB,e,SAY3BgC,EAAAA,G,IACdC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,SACApG,EAAAA,EAAAA,KACAP,EAAAA,EAAAA,QAOI4G,GAdG5B,EAAAA,EAAAA,YAAP,GAgBI6B,GAAShH,EAAAA,EAAAA,cACX,W,2BAAIiH,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAEFH,MAAAA,GAAAA,EAAAA,WAAAA,EAAAA,GAGAC,EAAAA,WAAAA,EAAAA,KAEF,CAACA,EARH,IAgBA,OALAhB,EAAAA,EAAAA,IAAoB,WAElB,OADAiB,EAAON,EAAD,MAANM,GACO,kBAAMA,EAAON,EAAD,SAAZ,MACN,CAACM,EAAQtG,EAHZqF,IAKO,gBAACY,EAAD,UAAuB5B,MAAOiC,GAArC,GAxCFL,EAAAA,YAAAA,eAEA,SAAYD,GACVA,EAAAA,EAAAA,IAAAA,GAAAA,MACAA,EAAAA,EAAAA,OAAAA,GAAAA,SAFF,CAAYA,IAAAA,EAAZ,KCgBA,SAAKQ,GACHA,EAAAA,EAAAA,KAAAA,GAAAA,OACAA,EAAAA,EAAAA,OAAAA,GAAAA,SAFF,CAAKA,IAAAA,EAAL,KASA,SAAKC,GACHA,EAAAA,EAAAA,WAAAA,GAAAA,aADF,CAAKA,IAAAA,EAAL,KAMA,IAAIC,IAAQ,MAMTD,EANS,0BAOR,OAAIE,EAAAA,UAAkBC,EAAtB,GAAwCD,GACxC,cAAmBE,QAASD,EAAOE,MARvC,GAYIC,GAAgB7C,EAAAA,EAAAA,eAApB,MAaA,SAAS8C,EAAiBC,GACxB,IAAInB,GAAUrB,EAAAA,EAAAA,YAAd,GACA,UAAIqB,EAAkB,CACpB,IAAIC,EAAM,IAAIrE,MAAM,IAAV,8BAAmDwF,EAAnD,YAAV,kBAEA,MADIxF,MAAJ,mBAA6BA,MAAAA,kBAAAA,EAAAA,GAC7B,EAEF,SAGF,SAASyF,EAAaR,EAAtB,GACE,OAAOS,EAAAA,EAAAA,GAAMR,EAAD,SAAZ,GAbFG,EAAAA,YAAAA,gBAkBA,IAYIM,EAAuBnF,EAAAA,GAAAA,eAA0BA,EAAAA,GAAAA,OAEjDoF,GAAaC,EAAAA,EAAAA,KAAiB,c,IAewB,EAJlDC,EAAyCpD,EAAzCoD,KAAMC,EAAmCrD,EAAnCqD,QAASnF,EAA0B8B,EAA1B9B,aAAiBoF,GAAAA,EAAAA,EAAAA,IAAStD,EAAAA,CAAAA,OAAAA,UAAAA,iB,GACCO,EAAAA,EAAAA,UAAS,GAApDgD,EAAAA,EAAAA,GAAmBC,EAAAA,EAAAA,GAEpBC,GAAsBC,EAAAA,EAAAA,WACtBN,IAAAA,GAAJ,OAA0BK,IAExBL,GAAOJ,EAAAA,EAAAA,GAAMS,IAAD,MACTE,EAAAA,GAAAA,OADS,IAETA,EAAAA,GAAAA,SAFS,EAAZP,KAMF,IAAIjF,GAAanD,EAAAA,EAAAA,QAAkD,IAAnE,KACI4I,GAAoB5I,EAAAA,EAAAA,QAAxB,MACI6I,EAAYhJ,EAAY+I,EAA5B,GAGIE,EAAU9D,EAAAA,eAAAA,SAAd,OAA8CyD,EAC1CM,EAAa/D,EAAAA,eAAjB,WACA,IAAK8D,IAAL,EACE,MAAM,IAAIxG,MAAV,kFAKF,MACE,MAAM,IAAIA,MAAV,8EAKF,MACE,MAAM,IAAIA,MAAV,8EAKF,sBAAW8F,EACT,MAAM,IAAI9F,MAAM,0FAAhB,GAKF,uBAAW+F,EACT,MAAM,IAAI/F,MAAM,8FAAhB,GAIF,IAAI0G,EAAcZ,EAAOhB,EAAH,KAAuBA,EAA7C,OACI6B,EACF,OAAIR,EACKA,IAAwBE,EAAAA,GAAAA,KAG1BK,IAAgB5B,EAAvB,K,GAGsB8B,EAAAA,EAAAA,YAAWnB,EAAc,CAC/CN,QAD+C,KAE/C0B,cAAe,OAFZ5B,EAAAA,EAAAA,GAAO6B,EAAAA,EAAAA,GAKRC,GAAQnJ,EAAAA,EAAAA,cAAY,kBAAMmI,GAAN,KAAsB,CAA9C,IAEIiB,GAAapJ,EAAAA,EAAAA,cACf,mBAAuBkJ,EAAS,CAAExI,KAAMyG,EAAR,WAAgCK,GAAAA,MAChE,CAFF,IAMI6B,GADQvD,EAAAA,EAAAA,MACWgD,IAAgB5B,EAAvC,KACIoC,EAAmBjB,EAAvB,EACIkB,EAAJ,QAAsBpE,EAAAA,EAAAA,YAAAA,GAIlBxD,EAAY2H,EAAhB,SAAmC,OAEnCzG,EAAa,EAEXwG,GACIvB,EAAAA,EAAAA,GAAMnG,EAAU,CACdvB,OAAQoJ,EAAAA,aACRC,KAAMD,EAAAA,MAERA,EAAAA,KACJ,CAAExG,aAAF,EAAgBC,WAAAA,I,SLpLlB1B,EACA8H,QAAAA,IAAAA,IAAAA,GAAmB,IAEnBtD,EAAAA,EAAAA,IAAoB,WAClB,MACKxE,EAAL,SAEA,IAAIpB,EAAUoB,EAAd,QAGA+C,EAAAA,IAAAA,GAGA,qBAAqBC,EAArB,uBAAuC,KAA9BG,EAA8B,QACjCA,EAAAA,SAAJ,KACED,EAAAA,GACAF,EAAS,OAATA,IA0BJ,OArBAzC,SAAAA,iBAAAA,YAAAA,SAA8C,SAAA4H,GAC5C,GAAMA,aAAN,aAGA,uCAAwC,KAA/BC,EAA+B,QACtC,GAAID,EAAAA,SAAJ,GAAkC,OAIpC,IAAIpF,EAAAA,OACFC,EAAAA,IAAAA,EAAqB,CACnB,cAAemF,EAAAA,aADI,eAGnBlF,MAAOkF,EAAMlF,QAIfA,EAAAA,QAIG,WAML,GAJAF,EAAa,OAAbA,GAIIA,EAAAA,KAAJ,EAEExC,SAAAA,iBAAAA,YAAAA,SAA8C,SAAA4H,GAC5C,GAAMA,aAAN,cAGInF,EAAAA,IAAJ,IAGA,uCAAwC,KAA/BoF,EAA+B,QACtC,GAAID,EAAAA,SAAJ,GAAkC,OAGpCnF,EAAAA,IAAAA,EAAqB,CACnB,cAAemF,EAAAA,aADI,eAGnBlF,MAAOkF,EAAMlF,QAIfA,EAAAA,YAGF,qBAAoBD,EAApB,uBAAsC,KAA7BpE,EAA6B,QAEpCsE,EAFoC,GAKpCF,EAAS,OAATA,QAIL,CA7EHwB,IKmLA6D,CAAelB,IAAmBY,GAAmBD,GAGrD5I,EAAe,aAAa,SAAAmD,G,MACtB4B,EAAS5B,EAAb,OAEIkF,IAAgB5B,EAApB,OACA,IACA,SAAIwB,EAAJ,gBAAIA,EAAAA,SAAJ,KAEAS,QAIF1I,EAAe,WAAW,SAAAmD,GACpBA,EAAAA,MAAclE,EAAKmK,QACnBf,IAAgB5B,EAApB,OACA,IACAtD,EAAAA,iBACAA,EAAAA,kBACAuF,UAIFpJ,EAAAA,EAAAA,YAAU,WACR,GAAI+I,IAAgB5B,EAApB,OACA,GAEA,IAAI4C,EAAWhI,SAAAA,gBAAAA,MAAf,SACIiI,EAAejI,SAAAA,gBAAAA,MAAnB,aAEIkI,EAAiBlJ,OAAAA,WAAoBgB,SAAAA,gBAAzC,YAKA,OAHAA,SAAAA,gBAAAA,MAAAA,SAAAA,SACAA,SAAAA,gBAAAA,MAAAA,aAAiDkI,EAAjDlI,KAEO,WACLA,SAAAA,gBAAAA,MAAAA,SAAAA,EACAA,SAAAA,gBAAAA,MAAAA,aAAAA,MAED,CAACgH,EAhBJ/I,KAmBAA,EAAAA,EAAAA,YAAU,WACR,GAAI+I,IAAgB5B,EAApB,MACKwB,EAAL,SAEA,IAAIuB,EAAW,IAAIC,sBAAqB,SAAAC,GACtC,uCAA2B,KAAlBC,EAAkB,QAEvBA,IAAAA,EAAAA,mBAAAA,GAAAA,IACAA,EAAAA,mBAAAA,GADAA,IAEAA,EAAAA,mBAAAA,OAHF,IAIEA,EAAAA,mBAAAA,QAEAjB,QAON,OAFAc,EAAAA,QAAiBvB,EAAjBuB,SAEO,kBAAMA,EAAN,iBACN,CAACnB,EAAaJ,EApBjB3I,I,yBFvM0CsF,EAAAA,EAAAA,UAAQ,IAA7CgF,EAAAA,EAAAA,GAAgBC,EAAAA,EAAAA,GAErB,MAAO,CAELD,EAAAA,OAAAA,EAA4BA,EAAAA,KAA5BA,UAFK,GAKLE,EAAAA,EAAAA,UAAQ,WACN,OAAO,SAA6BzF,GAClC,IAAI0F,GAAWxK,EAAAA,EAAAA,cAAY,YAGzB,OAFAsK,GAAkB,SAAAG,GAAQ,0BAEnB,kBACLH,GAAkB,SAAAG,GAChB,IAAIC,EAAQD,EAAZ,QACIE,EAAMD,EAAAA,QAAV,GAEA,OADA,IAAIC,GAAYD,EAAAA,OAAAA,EAAAA,GAChB,QARN,IAYIE,GAAaL,EAAAA,EAAAA,UACf,iBAAO,CAAEC,SAAF,EAAYK,KAAM/F,EAAlB,KAA8BqB,KAAMrB,EAApC,KAAgDA,MAAOA,EAAMA,SACpE,CAAC0F,EAAU1F,EAAX,KAAuBA,EAAvB,KAAmCA,EAFrC,QAKA,OACE,gBAACwB,EAAD,UAA6BvB,MAAO6F,GACjC9F,EAFL,aAMD,CA9BL,KE2NyCgG,GAApCC,GAAAA,GAAAA,GAAaC,GAAAA,GAAAA,GAEdxD,GAAK,sBAAqByD,EAAAA,EAAAA,KAE1BL,IAAaL,EAAAA,EAAAA,UACf,iBAAM,CAAC,CAAEzB,YAAF,EAAeK,MAAf,EAAsBC,WAAAA,GAA7B,KACA,CAACN,EAAazB,EAAO8B,EAFvB,IAKI0B,IAAON,EAAAA,EAAAA,UAA6B,iBAAO,CAAErC,KAAMY,IAAgB5B,EAAagE,QAAS,CAA7F,IAIIC,GAAiB,CACnBlL,IADmB,EAEnBuH,GAFmB,GAGnB4D,KAHmB,SAInB,aAActC,IAAgB5B,EAAhB4B,WAJK,EAKnB,kBAAmBzB,EALA,QAMnB,mBANmB,GAOnBgE,QAPmB,YAQjBzH,EAAAA,oBAGAgC,GAAJ,EAEA,OACE,mBACElF,KAAK,SACLP,QAASuI,EACT5B,UAAU9G,EAAAA,EAAAA,cAAY,gB,MACpB,WAAIU,IAEJoH,EAAAA,EAAAA,GAAMwD,IAAD,MACF5E,EAAa6E,KADX,WAEDtI,EAAAA,QAAAA,IAAAA,GACAqF,GAAqB,SAAAkD,GAAK,OAAIA,EAAJ,MAHzB,EAKF9E,EAAa+E,QALX,WAMDxI,EAAAA,QAAAA,IAAAA,GACAqF,GAAqB,SAAAkD,GAAK,OAAIA,EAAJ,MAP9B1D,MAHmB,KAerB,mBAAiB9C,OAAO,GACtB0G,EAAAA,cAAAA,EAAAA,KACE,gBAACjE,EAAD,UAAwB1C,MAAO6F,IAC7B,gBAACjF,EAAOgG,MAAR,CAAcnG,OAAQkD,GACpB,mBAAiB1D,OAAO,GACtB,oBAAqB6F,KAAMA,GAAM1E,KAAK,uBACnCF,EAAAA,EAAAA,IAAO,CACNnB,OAAO,EAAF,YADC,IAEN+F,KAFM,GAGN3E,WAxOpB,MAyOoBpD,SAJM,EAKNiG,QALM,EAMN5C,KAAM,qBAoBtByF,GAAU3D,EAAAA,EAAAA,KAAiB,SAAS2D,EAAT,K,MAGElE,EAAiB,CAACE,EAAD,YAAqBgE,EAArB,WAAD,M,GAAxC9C,EAAAA,EAAAA,YAAaK,EAAAA,EAAAA,MAChB0C,EAAalM,EAAjB,GAEI6H,EAAK,8BAA6ByD,EAAAA,EAAAA,KAElCa,GAAc9L,EAAAA,EAAAA,cAChB,YACE,GAAI4D,EAAAA,SAAiBA,EAArB,eACA,GAAI1D,EAAyB0D,EAA7B,eAAmD,OAAOA,EAAP,iBACnDA,EAAAA,iBACAA,EAAAA,kBACAuF,OAEF,CARF,IAWI0B,GAAON,EAAAA,EAAAA,UAA8B,iBAAO,CAAErC,KAAMY,IAAgB5B,EAAagE,QAAS,CAA9F,IAGIC,EAAiB,CACnBlL,IADmB,EAEnBuH,GAFmB,EAGnB,eAHmB,EAInB6D,QAASS,GAEPlG,EAAJ,EAEA,OAAOK,EAAAA,EAAAA,IAAO,CACZnB,OAAO,EAAF,WADO,GAEZ+F,KAFY,EAGZ3E,WAvCJ,MAwCIC,KAAM,sB,IAwCCyB,EAASmE,OAAA,SAA0B,CAAEH,QAAF,EAAWI,MA5BzD,SAASA,EAAT,G,MAGsCtE,EAAiB,CAACE,EAAD,YAAqBoE,EAArB,WAAD,M,GAA7ClD,EAAAA,EAAAA,YAAaM,EAAAA,EAAAA,WAEhB5B,EAAK,4BAA2ByD,EAAAA,EAAAA,MAEpClL,EAAAA,EAAAA,YAAU,WAER,OADAqJ,EAAAA,GACO,kBAAMA,EAAN,SACN,CAAC5B,EAHJzH,IAKA,IAAI8K,GAAON,EAAAA,EAAAA,UAA4B,iBAAO,CAAErC,KAAMY,IAAgB5B,EAAagE,QAAS,CAA5F,IAGIC,EAAiB,CAAE3D,GAAAA,GACnB5B,EAAJ,EAEA,OAAOK,EAAAA,EAAAA,IAAO,CACZnB,OAAO,EAAF,WADO,GAEZ+F,KAFY,EAGZ3E,WA3BJ,KA4BIC,KAAM,kBAMsD8F,Y,SFzU9DnH,GAEA,IAAI0B,EAAUD,IACViB,EAAK,2BAA0ByD,EAAAA,EAAAA,MAEnClF,EAAAA,EAAAA,IAAoB,kBAAMS,EAAAA,SAAN,KAA4B,CAACgB,EAAIhB,EAArDT,WAEA,IAAImG,EAAJ,EACIf,GAAiB,EAAH,SAAQ3E,EAAR,OAAuBgB,GAAAA,IAEzC,OAAOvB,EAAAA,EAAAA,IAAO,CACZnB,OAAO,EAAF,WADO,GAEZ+F,KAAMrE,EAAAA,MAFM,GAGZN,WAlBJ,IAmBIC,KAAMK,EAAAA,MAAgB,oB,sEG/Fd2F,E,mGCXIC,IACd,IAAIA,EAAJ,GAEIC,EAAM,CACRC,sBADQ,yHAEN,IAAIC,EAAMD,sBAAAA,WAAAA,EAAV,WACAD,EAAAA,KAAQ,kBAAMG,qBAAN,SAGVC,UANQ,W,2BAMKxF,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACXoF,EAAAA,uBAA0B,WACxBA,EAAAA,sBAAAA,MAAAA,EAAAA,OAIJK,WAZQ,yHAaN,IAAIC,EAAQD,WAAAA,WAAAA,EAAZ,WACAL,EAAAA,KAAQ,kBAAMO,aAAN,SAGVC,IAjBQ,YAkBNT,EAAAA,KAAAA,IAGFU,QArBQ,WAsBN,qBAAoBV,EAAAA,OAApB,mBAA2C,KAAlCU,EAAkC,QACzCA,OAKN,SD5BF,SAASC,EAAWC,G,6BAAsBC,EAAAA,IAAAA,MAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,GACxCD,GAAQC,EAAAA,OAARD,IAA8B,EAAAA,EAAA,uBAA9BA,GAGF,SAASE,EAAcF,G,6BAAsBC,EAAAA,IAAAA,MAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,GAC3CD,GAAQC,EAAAA,OAARD,IAA8B,EAAAA,EAAA,0BAA9BA,G,SAiDcG,EACdH,EACAI,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAIrB,IACJsB,OAAQF,IAAAA,E,SElEUG,GACtB,IAAItG,EAAQ,CAAEuG,QAAQ,GAEtB,OAAO,WACL,IAAIvG,EAAJ,OAEA,OADAA,EAAAA,QAAAA,EACOsG,EAAAA,WAAAA,EAAP,YF4D+BE,CAArBL,GAAkC,aA2B9C,OAzBAN,EAAAA,WAAAA,EAAAA,CAAAA,GAAAA,OAAAA,IACAH,EAAAA,WAAAA,EAAAA,CAAAA,GAAAA,OAAAA,EAAAA,IAEAU,EAAAA,WAAY,WACVP,EAAAA,WAAAA,EAAAA,CAAAA,GAAAA,OAAAA,IACAH,EAAAA,WAAAA,EAAAA,CAAAA,GAAAA,OAAAA,IAEAU,EAAAA,IA3DJ,SAA2BT,EAA3B,GACE,IAAIS,EAAIrB,IAER,MAAW,OAAOqB,EAAP,Q,MAGmCK,iBAAiBd,G,EAElC,CAFvBe,EAAAA,mBAAoBC,EAAAA,iBAEyCC,KAAI,SAAAlJ,G,MAC3CA,EAAA,gCAKnB,SAAAmJ,GAAC,OAAKA,EAAAA,SAAAA,MAAmBC,WAAnBD,GAAL,IAAwCC,WAAAA,MALtB,MAMlB,qBAAUC,EAAV,K,GAER,YARKC,IAAAA,EAAgB,OADlBC,EAAAA,EAAAA,GAAYC,EAAAA,EAAAA,GA8BjB,OAbA,IAAID,EACFb,EAAAA,YAAa,WACXD,EAAKrB,EAALqB,YACCc,EAFHb,GAMAD,EAAKrB,EAALqB,UAIFC,EAAAA,KAAM,kBAAMD,EAAKrB,EAAX,cAECsB,EAAP,QAsBIe,CAAkBxB,GAAM,SAAAyB,GAGtB,OAFAvB,EAAAA,WAAAA,EAAAA,CAAAA,GAAAA,OAAAA,EAAAA,IACAH,EAAAA,WAAAA,EAAAA,CAAAA,GAAAA,OAAAA,IACOW,EAAP,UASND,EAAAA,KAAM,kBAAMP,EAAAA,WAAAA,EAAAA,CAAAA,GAAAA,OAAAA,EAAAA,EAAAA,EAAN,OAGNO,EAAAA,KAAM,kBAAMC,EAAMvB,EAAZ,cAECsB,EAAP,QGhEF,SAASiB,EAAgBzB,GACvB,YADuBA,IAAAA,IAAAA,EAAkB,KAClC1C,EAAAA,EAAAA,UAAQ,kBAAM0C,EAAA,mBAA0B,SAAA0B,GAAS,OAAIA,EAAAA,OAAAA,OAAJ,OAAkC,CAA1F,KHnBF,SAAYxC,GACVA,EAAAA,SAAAA,WACAA,EAAAA,UAAAA,YAFF,CAAYA,IAAAA,EAAZ,KG6BA,IAGA,EAHIyC,GAAoBhK,EAAAA,EAAAA,eAAxB,MACAgK,EAAAA,YAAAA,oBAEA,SAAKC,GACHA,EAAAA,QAAAA,UACAA,EAAAA,OAAAA,SAFF,CAAKA,IAAAA,EAAL,KAyDA,IAAIC,GAAiBlK,EAAAA,EAAAA,eAArB,MAGA,SAASmK,EAAY,GAGnB,MAAI,aAAJ,EAA8BA,EAAYC,EAAnB,UAChBA,EAAA,gBAAmB,6BAAyBH,EAAzB,WAAnB,OAAP,EAGF,SAASI,EAAWzB,GAClB,IAAI0B,GAAUpP,EAAAA,EAAAA,QAAd,GACIqP,GAAyBrP,EAAAA,EAAAA,QAA7B,IACIsD,GAAUC,EAAAA,EAAAA,MAEdtD,EAAAA,EAAAA,YAAU,WACRmP,EAAAA,QAAAA,IACC,CAFHnP,IAIA,IAAIqP,GAAapP,EAAAA,EAAAA,cACf,c,WAAcqP,IAAAA,IAAAA,EAAWC,EAAAA,GAAAA,QACvB,IAAI3E,EAAMwE,EAAA,mBAAyC,gCACnD,IAAIxE,KAEJ7C,EAAAA,EAAAA,GAAMuH,IAAD,MACFC,EAAAA,GAAAA,SADE,WAEDH,EAAAA,QAAAA,OAAAA,EAAAA,IAFC,EAIFG,EAAAA,GAAAA,QAJE,WAKDH,EAAAA,QAAAA,GAAAA,MAA4CN,EAA5CM,QALJrH,KASKiH,EAAD,IAAwC3L,EAA5C,UACE8L,MAAAA,EAAAA,SAAAA,EAAAA,cAGJ,CAACA,EAAS9L,EAlBZ,IAqBIoH,GAAWxK,EAAAA,EAAAA,cACb,YACE,IAAI0J,EAAQyF,EAAA,cAAoC,+BAOhD,OANA,EAEWzF,EAAAA,QAAgBmF,EAApB,UACLnF,EAAAA,MAAcmF,EAAdnF,SAFAyF,EAAAA,QAAAA,KAAoC,CAAE3H,GAAF,EAAeH,MAAOwH,EAAWU,UAKhE,kBAAMH,EAAWI,EAASF,EAAAA,GAAAA,YAEnC,CAACH,EAXH,IAcA,OAAO5E,EAAAA,EAAAA,UACL,iBAAO,CACL1D,SADK,EAEL2D,SAFK,EAGL4E,WAAAA,KAEF,CAAC5E,EAAU4E,EANb,IAUF,SAASK,KA/DTX,EAAAA,YAAAA,iBAgEA,IAAIY,EAAa,CAAC,cAAe,aAAc,cAA/C,cACA,SAASC,EAAsBC,GAE7B,IADA,IACA,EADIC,EAAJ,GACA,6BAA6B,OAApB1J,EAAoB,QAC3B0J,EAAAA,GAAAA,OAAAA,EAAeD,EAAfC,IAAAA,EAAAA,EAEF,SAeF,IAEIC,EAAgClN,EAAAA,GAAAA,eAEpC,SAASmN,EAAT,G,MAKIC,EAgBElL,EAhBFkL,YACAC,EAeEnL,EAfFmL,WACAC,EAcEpL,EAdFoL,YACAC,EAaErL,EAbFqL,WAGAC,EAUEtL,EAVFsL,MACAC,EASEvL,EATFuL,UACAC,EAQExL,EARFwL,QACA/C,EAOEzI,EAPFyI,QACAgD,EAMEzL,EANFyL,MACAC,EAKE1L,EALF0L,UACAC,EAIE3L,EAJF2L,QAGGrI,GAAAA,EAAAA,EAAAA,IACDtD,EAAAA,CAAAA,cAAAA,aAAAA,cAAAA,aAAAA,QAAAA,YAAAA,UAAAA,UAAAA,QAAAA,YAAAA,YACAvD,GAAYzB,EAAAA,EAAAA,QAAhB,M,GACwBuF,EAAAA,EAAAA,UAASwJ,EAAD,SAA3BxH,EAAAA,EAAAA,GAAOqJ,EAAAA,EAAAA,GACRrB,EAAWjH,EAAAA,QAAekH,EAAAA,GAAAA,QAAyBA,EAAAA,GAAAA,O,EAhJzD,WACE,IAAI9I,GAAUrB,EAAAA,EAAAA,YAAd,GAEA,UAAIqB,EACF,MAAM,IAAIpE,MAAV,oGAKF,SAyIgCuO,GAA1BC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,Q,EAtItB,WACE,IAAItK,GAAUrB,EAAAA,EAAAA,YAAd,GAEA,UAAIqB,EACF,MAAM,IAAIpE,MAAV,oGAKF,SA8H+B2O,GAAzBvG,EAAAA,EAAAA,SAAU4E,EAAAA,EAAAA,WAEZ5H,GAAKyD,EAAAA,EAAAA,KAEL+F,GAAkBlR,EAAAA,EAAAA,SAAtB,GAEImR,EAAUhC,GAAW,WAGlB+B,EAAL,UACEN,EAAS7B,EAAT6B,QACAtB,EAAAA,GACAQ,GAAAA,QAAAA,kBAIJ7J,EAAAA,EAAAA,IAAoB,WAClB,KACA,OAAOyE,EAAP,KACC,CAACA,EAHJzE,KAKAA,EAAAA,EAAAA,IAAoB,W,MAEdsJ,IAAaC,EAAAA,GAAAA,QACjB,IAGIsB,GAAQvJ,IAAUwH,EAAtB,QACE6B,EAAS7B,EAAT6B,UAIF5I,EAAAA,EAAAA,GAAMT,IAAD,MACFwH,EADE,QACkB,kBAAMO,EAAN,IADlB,EAEFP,EAFE,SAEmB,kBAAMrE,EAAN,IAFxB1C,OAIC,CAACT,EAAOG,EAAIgD,EAAU4E,EAAYwB,EAfrC7K,IAiBA,IAAImL,EAAexC,EAAnB,GACIyC,EAAmBzC,EAAvB,GACI0C,EAAiB1C,EAArB,GAEI2C,EAAiB3C,EAArB,GAEI4C,EAAe5C,EAAnB,GACI6C,EAAmB7C,EAAvB,GACI8C,EAAiB9C,EAArB,GAEIkB,GA3FN,SAAmBA,GACjB,IAAI6B,GAAY3R,EAAAA,EAAAA,QAAO6P,EAAvB,IAMA,OAJA5P,EAAAA,EAAAA,YAAU,WACR0R,EAAAA,QAAoB9B,EAApB8B,KACC,CAFH1R,IAIA,EAoFa2R,CAAU,CAAE1B,YAAF,EAAeC,WAAf,EAA2BC,YAA3B,EAAwCC,WAAAA,IAE3DtK,IAAQC,EAAAA,EAAAA,MAEZ/F,EAAAA,EAAAA,YAAU,WACR,GAAI8F,IAASwB,IAAUwH,EAAnBhJ,SAAJ,OAA6CtE,EAAAA,QAC3C,MAAM,IAAIa,MAAV,qEAED,CAACb,EAAW8F,EAJftH,KAOA,IAAI4R,GAAOb,IAAX,GAEA/K,EAAAA,EAAAA,IAAoB,WAClB,IAAIiH,EAAOzL,EAAX,QACA,OACA,GAOA,OALAyP,EAAAA,SAAAA,EAEA,GAAUpB,GAAAA,QAAAA,cACV,GAAWA,GAAAA,QAAAA,cAEJgB,EACHzD,EAAWH,EAAMkE,EAAcC,EAAkBC,EAAgBC,GAAgB,SAAA5C,GAC/EuC,EAAAA,SAAAA,EACIvC,IAAWtC,EAAOyF,UAAUhC,GAAAA,QAAAA,gBAElCzC,EAAWH,EAAMsE,EAAcC,EAAkBC,EAAgBH,GAAgB,SAAA5C,GAC/EuC,EAAAA,SAAAA,EAEIvC,IAAWtC,EAAOyF,WAIjB7C,EAAL,KACE2B,EAAS7B,EAAT6B,QACAtB,EAAAA,GACAQ,GAAAA,QAAAA,oBAGP,CAAC,GAAD,yBA5BH7J,IA6CA,IAAIoF,GAAiB,CAAElL,IAAKsB,GACxBqE,GAAJ,EAEA,OACE,gBAACkJ,EAAD,UAAyB/J,MAAOkM,GAC9B,sBACElM,OAAO+C,EAAAA,EAAAA,GAAMT,GAAD,OACTwH,EADS,SACYpG,EAAAA,GAAAA,KADZ,EAEToG,EAFS,QAEWpG,EAAAA,GAAAA,OAFX,MAKXxC,EAAAA,EAAAA,IAAO,CACNnB,OAAO,EAAF,YADC,IAENoB,WAtJV,MAuJUpD,SAHM,EAINiG,QAAS1B,IAAUwH,EAJb,QAKN1I,KAAM,uB,SAOA0L,EACd/M,G,IAOwD,EAJlD8L,EAAuD9L,EAAvD8L,K,EAAuD9L,EAAjD+L,OAAAA,OAAAA,IAAAA,GAAS,EAAOiB,EAAiChN,EAAjCgN,QAAYlM,GAAAA,EAAAA,EAAAA,IAAqBd,EAAAA,CAAAA,OAAAA,SAAAA,YAEzDyD,GAAsBC,EAAAA,EAAAA,WAEtBoI,IAAAA,GAAJ,OAA0BrI,IACxBqI,GAAO9I,EAAAA,EAAAA,GAAMS,IAAD,MACTE,EAAAA,GAAAA,OADS,IAETA,EAAAA,GAAAA,SAFS,EAAZmI,KAMF,IAAK,EAAC,GAAM,GAAOmB,SAAnB,GACE,MAAM,IAAI3P,MAAV,4E,OAGsBiD,EAAAA,EAAAA,UAASuL,EAAO/B,EAAH,QAAwBA,EAA7B,QAA3BxH,EAAAA,EAAAA,GAAOqJ,EAAAA,EAAAA,GAERsB,EAAa/C,GAAW,WAC1ByB,EAAS7B,EAAT6B,WAGEI,E,WChXJ,IAAIA,GAAUhR,EAAAA,EAAAA,SAAd,GAMA,OAJAC,EAAAA,EAAAA,YAAU,WACR+Q,EAAAA,SAAAA,IADF/Q,IAIO+Q,EAAP,QD0WcmB,GACVC,GAAgB3H,EAAAA,EAAAA,UAClB,iBAAO,CAAEqG,KAAF,EAAyBC,OAAQA,IAAjC,EAAqDC,QAAAA,KAC5D,CAACF,EAAMC,EAFT,KAKA9Q,EAAAA,EAAAA,YAAU,WACR,EACE2Q,EAAS7B,EAAT6B,SACU3B,EAAL,IACL2B,EAAS7B,EAAT6B,UAED,CAACE,EANJ7Q,IAQA,IAAIoS,EAAc,CAAEL,QAAAA,GAEpB,OACE,gBAAChD,EAAD,UAAyB/J,MAAOiN,GAC9B,gBAACpD,EAAD,UAA4B7J,MAAOmN,IAChCjM,EAAAA,EAAAA,IAAO,CACNnB,OAAO,EAAF,YAEHsN,GAFG,WAGHvL,SAAU6E,EAAAA,cAAAA,EAAAA,OAAAA,OAAAA,GAAqByG,EAArBzG,MAEZxF,WANM,WAONpD,SAPM,EAQNiG,QAAS1B,IAAUwH,EARb,QASN1I,KAAM,iBAOhB0L,EAAAA,MAAmB,YAGjB,IAAIQ,EAAJ,QAA2BlN,EAAAA,EAAAA,YAAAA,GACvBmN,EAAJ,QAA2B9J,EAAAA,EAAAA,MAE3B,OAAQ6J,GAAwBC,EAC9B5G,EAAAA,cAAAA,EAAAA,OAAAA,OAAAA,GADK,IAGLA,EAAAA,cAAAA,EAAAA,OAAAA,OAAAA,GAHF,KAMFmG,EAAAA,KAAAA,G,oGExZIrK,EAAJ,EACA,SAAS+K,IACP,U,SAGctH,IACd,IAAIpF,GAAQC,EAAAA,EAAAA,K,GACMT,EAAAA,EAAAA,UAASQ,EAAQ0M,EAAT,MAArB/K,EAAAA,EAAAA,GAAIgL,EAAAA,EAAAA,GAMT,OAJAzM,EAAAA,EAAAA,IAAoB,WAClB,OAAIyB,GAAagL,EAAMD,OACtB,CAFHxM,IAIOyB,MAAAA,EAAa,GAAbA,OAAP,I,yFCrBcnE,IACd,IAAID,GAAUtD,EAAAA,EAAAA,SAAd,GAUA,OARAC,EAAAA,EAAAA,YAAU,WAGR,OAFAqD,EAAAA,SAAAA,EAEO,WACLA,EAAAA,SAAAA,KAJJrD,IAQA,I,gFCXWgG,EAAwC,qBAAXjF,OAAyB,EAAhC,gBAAkDf,EAAAA,W,gFCAjFsH,EAAQ,CAAEoL,uBAAuB,G,SAErB3M,I,OAC0CT,EAAAA,EAAAA,UAASgC,EAAD,uBAA3DoL,EAAAA,EAAAA,GAAuBC,EAAAA,EAAAA,GAY5B,OAVA3S,EAAAA,EAAAA,YAAU,YACR,IAAI0S,GAEJC,GAAAA,KACC,CAJH3S,KAMAA,EAAAA,EAAAA,YAAU,YACR,IAAIsH,EAAAA,wBAAuCA,EAAAA,uBAAAA,KAD7CtH,IAIA,I,uHCLU0I,E,UAHRkK,GAAU/N,EAAAA,EAAAA,eAAd,M,SAQgB4D,IACd,OAAOrD,EAAAA,EAAAA,YAAP,G,SAQcyN,EAAAA,G,IAAqB7N,EAAAA,EAAAA,MAAO8B,EAAAA,EAAAA,SAC1C,OAAO,gBAAC8L,EAAD,UAAkB5N,MAAOA,GAAhC,GAjBF4N,EAAAA,YAAAA,oBAEA,SAAYlK,GACVA,EAAAA,EAAAA,KAAAA,GAAAA,OACAA,EAAAA,EAAAA,OAAAA,GAAAA,SAFF,CAAYA,IAAAA,EAAZ,M,2CCZgBX,EACd/C,EACA8N,GAGA,GAAI9N,KAAJ,EAAqB,KACnB,IAAI+N,EAAcD,EAAlB,GADmB,mBAFlB5L,EAEkB,iCAFlBA,EAEkB,kBAEnB,MAA8B,oBAAhB6L,EAA6BA,EAAAA,WAAAA,EAApC,GAAP,EAGF,IAAIC,EAAQ,IAAI3Q,MAAM,oBAAV,mEACgF2J,OAAA,aAGnF,SAAAiH,GAAG,mBAHgF,KADhF,MAAZ,KAQA,MADI5Q,MAAJ,mBAA6BA,MAAAA,kBAAAA,EAAAA,GAC7B,E,gLCJUQ,EAoBA0M,E,uCAcIrJ,EAAAA,G,IACdnB,EAAAA,EAAAA,MACA+F,EAAAA,EAAAA,KACA3E,EAAAA,EAAAA,WACApD,EAAAA,EAAAA,S,IACAiG,QAAAA,OAAAA,IAAAA,GAAU,EACV5C,EAAAA,EAAAA,KAUA,KAAa,OAAO8M,EAAQnO,EAAO+F,EAAM3E,EAA5B,GAEb,IAAIgN,EAAY,MAAGpQ,EAAH,EAAeF,EAA/B,KAEA,GAAIsQ,EAAetQ,EAAnB,OAAoC,OACUkC,EADV,OACpBqO,OADoB,SACC/K,GADD,sBAIlC,KAAc,OAAO6K,EAAQ7K,EAAMyC,EAAM3E,EAA3B,GAGhB,GAAIgN,EAAetQ,EAAnB,eAA4C,SACRkC,EADQ,QACpCgN,OADoC,SACjB1J,GADiB,uBAEtCiH,EAAWyC,EAAUxC,EAAH,QAA4BA,EAAlD,OAEA,OAAOxH,EAAAA,EAAAA,GAAMuH,IAAD,MACTC,EADS,oBAER,aAFQ,EAITA,EAJS,mBAKR,OAAO2D,GAAQ,EAAD,WACE,CAAEG,QAAF,EAAgBC,MAAO,CAAEC,QAAS,UADpC,IAAd,IALJ,IAgBF,OAAOL,EAAQnO,EAAO+F,EAAM3E,EAA5B,GAGF,SAAS+M,EAAT,S,WAEEpI,IAAAA,IAAAA,EAAc,I,MAIgE0I,EAAKzO,EAAO,CAAC,UAAT,W,IAA5EsN,GAAIoB,OAAAA,IAAAA,EAAYC,EAAAA,EAAK5M,EAAAA,EAAAA,S,IAAU6M,QAAAA,OAAAA,IAAAA,EAAU,QAAUxH,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,CAAAA,KAAAA,WAAAA,YAMrDyH,OAAkB7O,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA,GAAuCA,EAAvCA,IAAAA,GAAtB,GAEI8O,EAAwC,oBAAb/M,EAA0BA,EAAjC,GAAxB,EASA,GAJIqF,EAAAA,WAAJ,oBAAyCA,EAAP,YAC9BA,EAAAA,UAAqCA,EAAAA,UAArCA,IAGAsH,IAAJ,YACMzH,OAAAA,KAAAA,GAAAA,OAAJ,EAA8C,CAC5C,KACG8H,EAAAA,EAAAA,gBAAD,IACCnS,MAAAA,QAAAA,IAAmCkS,EAAAA,OAFtC,EAIE,MAAM,IAAIxR,MACR,CAAC,+BAAD,sHAKE2J,OAAA,aACO,SAAA+H,GAAI,kBADX,KALF,0CAUE,CAAC,8FAAD,iGAIO,SAAAA,GAAI,kBAJX,KAVF,YADF,OAqBF,OAAOC,EAAAA,EAAAA,cAAa,EAElBhI,OAAAA,OAAAA,GAiCR,SAA6B,EAA7B,KAME,IADA,IACA,EADIrB,EAAQqB,OAAAA,OAAAA,GAAZ,G,iBAEiF,EADxEiI,EAAAA,EAAAA,WACH9H,IAAAA,EAAAA,SAAJ,IAA4C+H,EAAAA,IAC1ClI,OAAAA,OAAAA,IAAAA,EAAAA,IAAAA,GAAAA,SAAAA,GAGSnI,EAAL,kBAA6BsI,EAAAA,GAAAA,GAGxBtI,EAAL,kBAA6BqQ,EAAAA,GAAAA,IANjClI,KAFJ,6BAAmC,IAcnC,SAlDQmI,CAiEV,YACE,IAAIxJ,EAAQqB,OAAAA,OAAAA,GAAZ,GACA,IAAK,IAAL,YACE,IAAIrB,EAAAA,WAAiCA,EAAP,GAEhC,SAtE4ByJ,CAAQZ,EAAKrH,EAAkB,CAAhC,SAA2C0H,EAA3C,MAAmE,CAHxF7H,YAFF,IAcJ,OAAOqI,EAAAA,EAAAA,eAAc,EAEnBrI,OAAAA,OAAAA,GAAkBwH,EAAKrH,EAAkB,CAAzCH,QAAmDyH,IAAAA,EAAAA,UAFjC,GAApB,G,SAgDcvL,EACdN,G,MAEA,OAAOoE,OAAA,QAAcsI,EAAAA,EAAAA,YAAd,GAAgE,CACrEC,YAAW,SAAE3M,EAAF,eAA2BA,EAAUxB,OAYpD,SAASoN,EAAT,UAAqDgB,IAAAA,IAAAA,EAAuB,IAE1E,IADA,IACA,EADI7J,EAAQqB,OAAAA,OAAAA,GAAZ,GACA,6BAA4B,KAAnBiH,EAAmB,QACtBA,KAAJ,UAAyBtI,EAAP,GAEpB,UAzNF,SAAY9H,GAEVA,EAAAA,EAAAA,KAAAA,GAAAA,OASAA,EAAAA,EAAAA,eAAAA,GAAAA,iBAMAA,EAAAA,EAAAA,OAAAA,GAAAA,SAjBF,CAAYA,IAAAA,EAAZ,KAoBA,SAAY0M,GACVA,EAAAA,EAAAA,QAAAA,GAAAA,UACAA,EAAAA,EAAAA,OAAAA,GAAAA,SAFF,CAAYA,IAAAA,EAAZ,M,qBClCA,IAIInL,EAJYqQ,EAAQ,KAIdC,CAHCD,EAAQ,MAGO,OAE1BE,EAAOC,QAAUxQ,G,4FCFF,SAASyQ,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAInT,MAAMoT,QAAQD,GAAM,OAAO,EAAAE,EAAA,GAAiBF,GDGzC,CAAkBA,IELZ,SAA0BG,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOtT,MAAM2L,KAAK2H,GFInF,CAAgBH,KAAQ,EAAAM,EAAA,GAA2BN,IGLvE,WACb,MAAM,IAAIO,UAAU,wIHIwE,K,iQIY9F,MAfA,SAAyBtQ,GACvB,OAAoB4G,EAAAA,cAAoB,MAAOK,OAAOsJ,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,OAAQ,eACR,cAAe,QACd3Q,GAAqB4G,EAAAA,cAAoB,OAAQ,CAClDgK,cAAe,QACfC,eAAgB,QAChBC,YAAa,EACbnI,EAAG,8ICIP,MAfA,SAAqB3I,GACnB,OAAoB4G,EAAAA,cAAoB,MAAOK,OAAOsJ,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,OAAQ,eACR,cAAe,QACd3Q,GAAqB4G,EAAAA,cAAoB,OAAQ,CAClDgK,cAAe,QACfC,eAAgB,QAChBC,YAAa,EACbnI,EAAG,wFCIP,MAfA,SAAuB3I,GACrB,OAAoB4G,EAAAA,cAAoB,MAAOK,OAAOsJ,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,OAAQ,eACR,cAAe,QACd3Q,GAAqB4G,EAAAA,cAAoB,OAAQ,CAClDgK,cAAe,QACfC,eAAgB,QAChBC,YAAa,EACbnI,EAAG,4ICIP,MAfA,SAA0B3I,GACxB,OAAoB4G,EAAAA,cAAoB,MAAOK,OAAOsJ,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,OAAQ,eACR,cAAe,QACd3Q,GAAqB4G,EAAAA,cAAoB,OAAQ,CAClDgK,cAAe,QACfC,eAAgB,QAChBC,YAAa,EACbnI,EAAG,mBCSP,MApBA,SAAiB3I,GACf,OAAoB4G,EAAAA,cAAoB,MAAOK,OAAOsJ,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,OAAQ,eACR,cAAe,QACd3Q,GAAqB4G,EAAAA,cAAoB,OAAQ,CAClDgK,cAAe,QACfC,eAAgB,QAChBC,YAAa,EACbnI,EAAG,weACY/B,EAAAA,cAAoB,OAAQ,CAC3CgK,cAAe,QACfC,eAAgB,QAChBC,YAAa,EACbnI,EAAG,uCCDP,MAfA,SAAkC3I,GAChC,OAAoB4G,EAAAA,cAAoB,MAAOK,OAAOsJ,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,OAAQ,eACR,cAAe,QACd3Q,GAAqB4G,EAAAA,cAAoB,OAAQ,CAClDgK,cAAe,QACfC,eAAgB,QAChBC,YAAa,EACbnI,EAAG,yFCIP,MAfA,SAAgC3I,GAC9B,OAAoB4G,EAAAA,cAAoB,MAAOK,OAAOsJ,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,OAAQ,eACR,cAAe,QACd3Q,GAAqB4G,EAAAA,cAAoB,OAAQ,CAClDgK,cAAe,QACfC,eAAgB,QAChBC,YAAa,EACbnI,EAAG,gKCIP,MAfA,SAAqB3I,GACnB,OAAoB4G,EAAAA,cAAoB,MAAOK,OAAOsJ,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,OAAQ,eACR,cAAe,QACd3Q,GAAqB4G,EAAAA,cAAoB,OAAQ,CAClDgK,cAAe,QACfC,eAAgB,QAChBC,YAAa,EACbnI,EAAG","sources":["../node_modules/@headlessui/react/src/components/keyboard.ts","../node_modules/@headlessui/react/src/hooks/use-sync-refs.ts","../node_modules/@headlessui/react/src/utils/bugs.ts","../node_modules/@headlessui/react/src/hooks/use-window-event.ts","../node_modules/@headlessui/react/src/utils/focus-management.ts","../node_modules/@headlessui/react/src/hooks/use-focus-trap.ts","../node_modules/@headlessui/react/src/hooks/use-inert-others.ts","../node_modules/@headlessui/react/src/internal/portal-force-root.tsx","../node_modules/@headlessui/react/src/components/portal/portal.tsx","../node_modules/@headlessui/react/src/components/description/description.tsx","../node_modules/@headlessui/react/src/internal/stack-context.tsx","../node_modules/@headlessui/react/src/components/dialog/dialog.tsx","../node_modules/@headlessui/react/src/components/transitions/utils/transition.ts","../node_modules/@headlessui/react/src/utils/disposables.ts","../node_modules/@headlessui/react/src/utils/once.ts","../node_modules/@headlessui/react/src/components/transitions/transition.tsx","../node_modules/@headlessui/react/src/hooks/use-is-initial-render.ts","../node_modules/@headlessui/react/src/hooks/use-id.ts","../node_modules/@headlessui/react/src/hooks/use-is-mounted.ts","../node_modules/@headlessui/react/src/hooks/use-iso-morphic-effect.ts","../node_modules/@headlessui/react/src/hooks/use-server-handoff-complete.ts","../node_modules/@headlessui/react/src/internal/open-closed.tsx","../node_modules/@headlessui/react/src/utils/match.ts","../node_modules/@headlessui/react/src/utils/render.ts","../node_modules/lodash/_Set.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@heroicons/react/outline/esm/AdjustmentsIcon.js","../node_modules/@heroicons/react/outline/esm/ArchiveIcon.js","../node_modules/@heroicons/react/outline/esm/BackspaceIcon.js","../node_modules/@heroicons/react/outline/esm/ChevronRightIcon.js","../node_modules/@heroicons/react/outline/esm/CogIcon.js","../node_modules/@heroicons/react/outline/esm/PresentationChartBarIcon.js","../node_modules/@heroicons/react/outline/esm/QuestionMarkCircleIcon.js","../node_modules/@heroicons/react/outline/esm/XCircleIcon.js"],"sourcesContent":["// TODO: This must already exist somewhere, right? 🤔\n// Ref: https://www.w3.org/TR/uievents-key/#named-key-attribute-values\nexport enum Keys {\n  Space = ' ',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Backspace = 'Backspace',\n\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n\n  Home = 'Home',\n  End = 'End',\n\n  PageUp = 'PageUp',\n  PageDown = 'PageDown',\n\n  Tab = 'Tab',\n}\n","import { useRef, useEffect, useCallback } from 'react'\n\nexport function useSyncRefs<TType>(\n  ...refs: (React.MutableRefObject<TType | null> | ((instance: TType) => void) | null)[]\n) {\n  let cache = useRef(refs)\n\n  useEffect(() => {\n    cache.current = refs\n  }, [refs])\n\n  return useCallback(\n    (value: TType) => {\n      for (let ref of cache.current) {\n        if (ref == null) continue\n        if (typeof ref === 'function') ref(value)\n        else ref.current = value\n      }\n    },\n    [cache]\n  )\n}\n","// See: https://github.com/facebook/react/issues/7711\n// See: https://github.com/facebook/react/pull/20612\n// See: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#concept-fe-disabled (2.)\nexport function isDisabledReactIssue7711(element: Element): boolean {\n  let parent = element.parentElement\n  let legend = null\n\n  while (parent && !(parent instanceof HTMLFieldSetElement)) {\n    if (parent instanceof HTMLLegendElement) legend = parent\n    parent = parent.parentElement\n  }\n\n  let isParentDisabled = parent?.getAttribute('disabled') === '' ?? false\n  if (isParentDisabled && isFirstLegend(legend)) return false\n\n  return isParentDisabled\n}\n\nfunction isFirstLegend(element: HTMLLegendElement | null): boolean {\n  if (!element) return false\n\n  let previous = element.previousElementSibling\n\n  while (previous !== null) {\n    if (previous instanceof HTMLLegendElement) return false\n    previous = previous.previousElementSibling\n  }\n\n  return true\n}\n","import { useEffect, useRef } from 'react'\n\nexport function useWindowEvent<TType extends keyof WindowEventMap>(\n  type: TType,\n  listener: (this: Window, ev: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  let listenerRef = useRef(listener)\n  listenerRef.current = listener\n\n  useEffect(() => {\n    function handler(event: WindowEventMap[TType]) {\n      listenerRef.current.call(window, event)\n    }\n\n    window.addEventListener(type, handler, options)\n    return () => window.removeEventListener(type, handler, options)\n  }, [type, options])\n}\n","import { match } from './match'\n\n// Credit:\n//  - https://stackoverflow.com/a/30753870\nlet focusableSelector = [\n  '[contentEditable=true]',\n  '[tabindex]',\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'iframe',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n]\n  .map(\n    process.env.NODE_ENV === 'test'\n      ? // TODO: Remove this once JSDOM fixes the issue where an element that is\n        // \"hidden\" can be the document.activeElement, because this is not possible\n        // in real browsers.\n        selector => `${selector}:not([tabindex='-1']):not([style*='display: none'])`\n      : selector => `${selector}:not([tabindex='-1'])`\n  )\n  .join(',')\n\nexport enum Focus {\n  /** Focus the first non-disabled element */\n  First = 1 << 0,\n\n  /** Focus the previous non-disabled element */\n  Previous = 1 << 1,\n\n  /** Focus the next non-disabled element */\n  Next = 1 << 2,\n\n  /** Focus the last non-disabled element */\n  Last = 1 << 3,\n\n  /** Wrap tab around */\n  WrapAround = 1 << 4,\n\n  /** Prevent scrolling the focusable elements into view */\n  NoScroll = 1 << 5,\n}\n\nexport enum FocusResult {\n  /** Something went wrong while trying to focus. */\n  Error,\n\n  /** When `Focus.WrapAround` is enabled, going from position `N` to `N+1` where `N` is the last index in the array, then we overflow. */\n  Overflow,\n\n  /** Focus was successful. */\n  Success,\n\n  /** When `Focus.WrapAround` is enabled, going from position `N` to `N-1` where `N` is the first index in the array, then we underflow. */\n  Underflow,\n}\n\nenum Direction {\n  Previous = -1,\n  Next = 1,\n}\n\nexport function getFocusableElements(container: HTMLElement | null = document.body) {\n  if (container == null) return []\n  return Array.from(container.querySelectorAll<HTMLElement>(focusableSelector))\n}\n\nexport enum FocusableMode {\n  /** The element itself must be focusable. */\n  Strict,\n\n  /** The element should be inside of a focusable element. */\n  Loose,\n}\n\nexport function isFocusableElement(\n  element: HTMLElement,\n  mode: FocusableMode = FocusableMode.Strict\n) {\n  if (element === document.body) return false\n\n  return match(mode, {\n    [FocusableMode.Strict]() {\n      return element.matches(focusableSelector)\n    },\n    [FocusableMode.Loose]() {\n      let next: HTMLElement | null = element\n\n      while (next !== null) {\n        if (next.matches(focusableSelector)) return true\n        next = next.parentElement\n      }\n\n      return false\n    },\n  })\n}\n\nexport function focusElement(element: HTMLElement | null) {\n  element?.focus({ preventScroll: true })\n}\n\nexport function focusIn(container: HTMLElement | HTMLElement[], focus: Focus) {\n  let elements = Array.isArray(container)\n    ? container.slice().sort((a, b) => {\n        let position = a.compareDocumentPosition(b)\n\n        if (position & Node.DOCUMENT_POSITION_FOLLOWING) return -1\n        if (position & Node.DOCUMENT_POSITION_PRECEDING) return 1\n        return 0\n      })\n    : getFocusableElements(container)\n  let active = document.activeElement as HTMLElement\n\n  let direction = (() => {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let startIndex = (() => {\n    if (focus & Focus.First) return 0\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(active)) - 1\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(active)) + 1\n    if (focus & Focus.Last) return elements.length - 1\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let focusOptions = focus & Focus.NoScroll ? { preventScroll: true } : {}\n\n  let offset = 0\n  let total = elements.length\n  let next = undefined\n  do {\n    // Guard against infinite loops\n    if (offset >= total || offset + total <= 0) return FocusResult.Error\n\n    let nextIdx = startIndex + offset\n\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow\n      if (nextIdx >= total) return FocusResult.Overflow\n    }\n\n    next = elements[nextIdx]\n\n    // Try the focus the next element, might not work if it is \"hidden\" to the user.\n    next?.focus(focusOptions)\n\n    // Try the next one in line\n    offset += direction\n  } while (next !== document.activeElement)\n\n  // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on whether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0')\n\n  return FocusResult.Success\n}\n","import {\n  useRef,\n  // Types\n  MutableRefObject,\n  useEffect,\n} from 'react'\n\nimport { Keys } from '../components/keyboard'\nimport { focusElement, focusIn, Focus, FocusResult } from '../utils/focus-management'\nimport { useWindowEvent } from './use-window-event'\nimport { useIsMounted } from './use-is-mounted'\n\nexport enum Features {\n  /** No features enabled for the `useFocusTrap` hook. */\n  None = 1 << 0,\n\n  /** Ensure that we move focus initially into the container. */\n  InitialFocus = 1 << 1,\n\n  /** Ensure that pressing `Tab` and `Shift+Tab` is trapped within the container. */\n  TabLock = 1 << 2,\n\n  /** Ensure that programmatically moving focus outside of the container is disallowed. */\n  FocusLock = 1 << 3,\n\n  /** Ensure that we restore the focus when unmounting the component that uses this `useFocusTrap` hook. */\n  RestoreFocus = 1 << 4,\n\n  /** Enable all features. */\n  All = InitialFocus | TabLock | FocusLock | RestoreFocus,\n}\n\nexport function useFocusTrap(\n  container: MutableRefObject<HTMLElement | null>,\n  features: Features = Features.All,\n  {\n    initialFocus,\n    containers,\n  }: {\n    initialFocus?: MutableRefObject<HTMLElement | null>\n    containers?: MutableRefObject<Set<MutableRefObject<HTMLElement | null>>>\n  } = {}\n) {\n  let restoreElement = useRef<HTMLElement | null>(\n    typeof window !== 'undefined' ? (document.activeElement as HTMLElement) : null\n  )\n  let previousActiveElement = useRef<HTMLElement | null>(null)\n  let mounted = useIsMounted()\n\n  let featuresRestoreFocus = Boolean(features & Features.RestoreFocus)\n  let featuresInitialFocus = Boolean(features & Features.InitialFocus)\n\n  // Capture the currently focused element, before we enable the focus trap.\n  useEffect(() => {\n    if (!featuresRestoreFocus) return\n\n    restoreElement.current = document.activeElement as HTMLElement\n  }, [featuresRestoreFocus])\n\n  // Restore the focus when we unmount the component.\n  useEffect(() => {\n    if (!featuresRestoreFocus) return\n\n    return () => {\n      focusElement(restoreElement.current)\n      restoreElement.current = null\n    }\n  }, [featuresRestoreFocus])\n\n  // Handle initial focus\n  useEffect(() => {\n    if (!featuresInitialFocus) return\n    if (!container.current) return\n\n    let activeElement = document.activeElement as HTMLElement\n\n    if (initialFocus?.current) {\n      if (initialFocus?.current === activeElement) {\n        previousActiveElement.current = activeElement\n        return // Initial focus ref is already the active element\n      }\n    } else if (container.current.contains(activeElement)) {\n      previousActiveElement.current = activeElement\n      return // Already focused within Dialog\n    }\n\n    // Try to focus the initialFocus ref\n    if (initialFocus?.current) {\n      focusElement(initialFocus.current)\n    } else {\n      if (focusIn(container.current, Focus.First) === FocusResult.Error) {\n        console.warn('There are no focusable elements inside the <FocusTrap />')\n      }\n    }\n\n    previousActiveElement.current = document.activeElement as HTMLElement\n  }, [container, initialFocus, featuresInitialFocus])\n\n  // Handle `Tab` & `Shift+Tab` keyboard events\n  useWindowEvent('keydown', event => {\n    if (!(features & Features.TabLock)) return\n\n    if (!container.current) return\n    if (event.key !== Keys.Tab) return\n\n    event.preventDefault()\n\n    if (\n      focusIn(\n        container.current,\n        (event.shiftKey ? Focus.Previous : Focus.Next) | Focus.WrapAround\n      ) === FocusResult.Success\n    ) {\n      previousActiveElement.current = document.activeElement as HTMLElement\n    }\n  })\n\n  // Prevent programmatically escaping the container\n  useWindowEvent(\n    'focus',\n    event => {\n      if (!(features & Features.FocusLock)) return\n\n      let allContainers = new Set(containers?.current)\n      allContainers.add(container)\n\n      if (!allContainers.size) return\n\n      let previous = previousActiveElement.current\n      if (!previous) return\n      if (!mounted.current) return\n\n      let toElement = event.target as HTMLElement | null\n\n      if (toElement && toElement instanceof HTMLElement) {\n        if (!contains(allContainers, toElement)) {\n          event.preventDefault()\n          event.stopPropagation()\n          focusElement(previous)\n        } else {\n          previousActiveElement.current = toElement\n          focusElement(toElement)\n        }\n      } else {\n        focusElement(previousActiveElement.current)\n      }\n    },\n    true\n  )\n}\n\nfunction contains(containers: Set<MutableRefObject<HTMLElement | null>>, element: HTMLElement) {\n  for (let container of containers) {\n    if (container.current?.contains(element)) return true\n  }\n\n  return false\n}\n","import { MutableRefObject } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nlet interactables = new Set<HTMLElement>()\nlet originals = new Map<HTMLElement, { 'aria-hidden': string | null; inert: boolean }>()\n\nfunction inert(element: HTMLElement) {\n  element.setAttribute('aria-hidden', 'true')\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = true\n}\n\nfunction restore(element: HTMLElement) {\n  let original = originals.get(element)\n  if (!original) return\n\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden')\n  else element.setAttribute('aria-hidden', original['aria-hidden'])\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = original.inert\n}\n\nexport function useInertOthers<TElement extends HTMLElement>(\n  container: MutableRefObject<TElement | null>,\n  enabled: boolean = true\n) {\n  useIsoMorphicEffect(() => {\n    if (!enabled) return\n    if (!container.current) return\n\n    let element = container.current\n\n    // Mark myself as an interactable element\n    interactables.add(element)\n\n    // Restore elements that now contain an interactable child\n    for (let original of originals.keys()) {\n      if (original.contains(element)) {\n        restore(original)\n        originals.delete(original)\n      }\n    }\n\n    // Collect direct children of the body\n    document.querySelectorAll('body > *').forEach(child => {\n      if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n      // Skip the interactables, and the parents of the interactables\n      for (let interactable of interactables) {\n        if (child.contains(interactable)) return\n      }\n\n      // Keep track of the elements\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert,\n        })\n\n        // Mutate the element\n        inert(child)\n      }\n    })\n\n    return () => {\n      // Inert is disabled on the current element\n      interactables.delete(element)\n\n      // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll('body > *').forEach(child => {\n          if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n          // Skip already inert parents\n          if (originals.has(child)) return\n\n          // Skip the interactables, and the parents of the interactables\n          for (let interactable of interactables) {\n            if (child.contains(interactable)) return\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert,\n          })\n\n          // Mutate the element\n          inert(child)\n        })\n      } else {\n        for (let element of originals.keys()) {\n          // Restore\n          restore(element)\n\n          // Cleanup\n          originals.delete(element)\n        }\n      }\n    }\n  }, [enabled])\n}\n","import React, {\n  createContext,\n  useContext,\n\n  // Types\n  ReactNode,\n} from 'react'\n\nlet ForcePortalRootContext = createContext(false)\n\nexport function usePortalRoot() {\n  return useContext(ForcePortalRootContext)\n}\n\ninterface ForcePortalRootProps {\n  force: boolean\n  children: ReactNode\n}\n\nexport function ForcePortalRoot(props: ForcePortalRootProps) {\n  return (\n    <ForcePortalRootContext.Provider value={props.force}>\n      {props.children}\n    </ForcePortalRootContext.Provider>\n  )\n}\n","import React, {\n  Fragment,\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { usePortalRoot } from '../../internal/portal-force-root'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\n\nfunction usePortalTarget(): HTMLElement | null {\n  let forceInRoot = usePortalRoot()\n  let groupTarget = useContext(PortalGroupContext)\n  let [target, setTarget] = useState(() => {\n    // Group context is used, but still null\n    if (!forceInRoot && groupTarget !== null) return null\n\n    // No group context is used, let's create a default portal root\n    if (typeof window === 'undefined') return null\n    let existingRoot = document.getElementById('headlessui-portal-root')\n    if (existingRoot) return existingRoot\n\n    let root = document.createElement('div')\n    root.setAttribute('id', 'headlessui-portal-root')\n    return document.body.appendChild(root)\n  })\n\n  // Ensure the portal root is always in the DOM\n  useEffect(() => {\n    if (target === null) return\n\n    if (!document.body.contains(target)) {\n      document.body.appendChild(target)\n    }\n  }, [target])\n\n  useEffect(() => {\n    if (forceInRoot) return\n    if (groupTarget === null) return\n    setTarget(groupTarget.current)\n  }, [groupTarget, setTarget, forceInRoot])\n\n  return target\n}\n\n// ---\n\nlet DEFAULT_PORTAL_TAG = Fragment\ninterface PortalRenderPropArg {}\n\nexport function Portal<TTag extends ElementType = typeof DEFAULT_PORTAL_TAG>(\n  props: Props<TTag, PortalRenderPropArg>\n) {\n  let passthroughProps = props\n  let target = usePortalTarget()\n  let [element] = useState<HTMLDivElement | null>(() =>\n    typeof window === 'undefined' ? null : document.createElement('div')\n  )\n\n  let ready = useServerHandoffComplete()\n\n  useIsoMorphicEffect(() => {\n    if (!target) return\n    if (!element) return\n\n    target.appendChild(element)\n\n    return () => {\n      if (!target) return\n      if (!element) return\n\n      target.removeChild(element)\n\n      if (target.childNodes.length <= 0) {\n        target.parentElement?.removeChild(target)\n      }\n    }\n  }, [target, element])\n\n  if (!ready) return null\n\n  return !target || !element\n    ? null\n    : createPortal(\n        render({ props: passthroughProps, defaultTag: DEFAULT_PORTAL_TAG, name: 'Portal' }),\n        element\n      )\n}\n\n// ---\n\nlet DEFAULT_GROUP_TAG = Fragment\ninterface GroupRenderPropArg {}\n\nlet PortalGroupContext = createContext<MutableRefObject<HTMLElement | null> | null>(null)\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(\n  props: Props<TTag, GroupRenderPropArg> & {\n    target: MutableRefObject<HTMLElement | null>\n  }\n) {\n  let { target, ...passthroughProps } = props\n\n  return (\n    <PortalGroupContext.Provider value={target}>\n      {render({\n        props: passthroughProps,\n        defaultTag: DEFAULT_GROUP_TAG,\n        name: 'Popover.Group',\n      })}\n    </PortalGroupContext.Provider>\n  )\n}\n\n// ---\n\nPortal.Group = Group\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet DescriptionContext = createContext<\n  ({ register(value: string): () => void } & SharedData) | null\n>(null)\n\nfunction useDescriptionContext() {\n  let context = useContext(DescriptionContext)\n  if (context === null) {\n    let err = new Error(\n      'You used a <Description /> component, but it is not inside a relevant parent.'\n    )\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDescriptionContext)\n    throw err\n  }\n  return context\n}\n\ninterface DescriptionProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useDescriptions(): [\n  string | undefined,\n  (props: DescriptionProviderProps) => JSX.Element\n] {\n  let [descriptionIds, setDescriptionIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined\n    descriptionIds.length > 0 ? descriptionIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function DescriptionProvider(props: DescriptionProviderProps) {\n        let register = useCallback((value: string) => {\n          setDescriptionIds(existing => [...existing, value])\n\n          return () =>\n            setDescriptionIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return (\n          <DescriptionContext.Provider value={contextBag}>\n            {props.children}\n          </DescriptionContext.Provider>\n        )\n      }\n    }, [setDescriptionIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_DESCRIPTION_TAG = 'p' as const\ninterface DescriptionRenderPropArg {}\ntype DescriptionPropsWeControl = 'id'\n\nexport function Description<TTag extends ElementType = typeof DEFAULT_DESCRIPTION_TAG>(\n  props: Props<TTag, DescriptionRenderPropArg, DescriptionPropsWeControl>\n) {\n  let context = useDescriptionContext()\n  let id = `headlessui-description-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let passThroughProps = props\n  let propsWeControl = { ...context.props, id }\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot: context.slot || {},\n    defaultTag: DEFAULT_DESCRIPTION_TAG,\n    name: context.name || 'Description',\n  })\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n\n  // Types\n  MutableRefObject,\n  ReactNode,\n} from 'react'\nimport { useIsoMorphicEffect } from '../hooks/use-iso-morphic-effect'\n\ntype OnUpdate = (\n  message: StackMessage,\n  type: string,\n  element: MutableRefObject<HTMLElement | null>\n) => void\n\nlet StackContext = createContext<OnUpdate>(() => {})\nStackContext.displayName = 'StackContext'\n\nexport enum StackMessage {\n  Add,\n  Remove,\n}\n\nexport function useStackContext() {\n  return useContext(StackContext)\n}\n\nexport function StackProvider({\n  children,\n  onUpdate,\n  type,\n  element,\n}: {\n  children: ReactNode\n  onUpdate?: OnUpdate\n  type: string\n  element: MutableRefObject<HTMLElement | null>\n}) {\n  let parentUpdate = useStackContext()\n\n  let notify = useCallback(\n    (...args: Parameters<OnUpdate>) => {\n      // Notify our layer\n      onUpdate?.(...args)\n\n      // Notify the parent\n      parentUpdate(...args)\n    },\n    [parentUpdate, onUpdate]\n  )\n\n  useIsoMorphicEffect(() => {\n    notify(StackMessage.Add, type, element)\n    return () => notify(StackMessage.Remove, type, element)\n  }, [notify, type, element])\n\n  return <StackContext.Provider value={notify}>{children}</StackContext.Provider>\n}\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n\n  // Types\n  ContextType,\n  ElementType,\n  MouseEvent as ReactMouseEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { useId } from '../../hooks/use-id'\nimport { useFocusTrap, Features as FocusTrapFeatures } from '../../hooks/use-focus-trap'\nimport { useInertOthers } from '../../hooks/use-inert-others'\nimport { Portal } from '../../components/portal/portal'\nimport { ForcePortalRoot } from '../../internal/portal-force-root'\nimport { Description, useDescriptions } from '../description/description'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosed, State } from '../../internal/open-closed'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\nimport { StackProvider, StackMessage } from '../../internal/stack-context'\n\nenum DialogStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  titleId: string | null\n}\n\nenum ActionTypes {\n  SetTitleId,\n}\n\ntype Actions = { type: ActionTypes.SetTitleId; id: string | null }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.SetTitleId](state, action) {\n    if (state.titleId === action.id) return state\n    return { ...state, titleId: action.id }\n  },\n}\n\nlet DialogContext = createContext<\n  | [\n      {\n        dialogState: DialogStates\n        close(): void\n        setTitleId(id: string | null): void\n      },\n      StateDefinition\n    ]\n  | null\n>(null)\nDialogContext.displayName = 'DialogContext'\n\nfunction useDialogContext(component: string) {\n  let context = useContext(DialogContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Dialog.displayName} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_DIALOG_TAG = 'div' as const\ninterface DialogRenderPropArg {\n  open: boolean\n}\ntype DialogPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'aria-modal'\n  | 'aria-describedby'\n  | 'aria-labelledby'\n  | 'onClick'\n\nlet DialogRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet DialogRoot = forwardRefWithAs(function Dialog<\n  TTag extends ElementType = typeof DEFAULT_DIALOG_TAG\n>(\n  props: Props<TTag, DialogRenderPropArg, DialogPropsWeControl> &\n    PropsForFeatures<typeof DialogRenderFeatures> & {\n      open?: boolean\n      onClose(value: boolean): void\n      initialFocus?: MutableRefObject<HTMLElement | null>\n    },\n  ref: Ref<HTMLDivElement>\n) {\n  let { open, onClose, initialFocus, ...rest } = props\n  let [nestedDialogCount, setNestedDialogCount] = useState(0)\n\n  let usesOpenClosedState = useOpenClosed()\n  if (open === undefined && usesOpenClosedState !== null) {\n    // Update the `open` prop based on the open closed state\n    open = match(usesOpenClosedState, {\n      [State.Open]: true,\n      [State.Closed]: false,\n    })\n  }\n\n  let containers = useRef<Set<MutableRefObject<HTMLElement | null>>>(new Set())\n  let internalDialogRef = useRef<HTMLDivElement | null>(null)\n  let dialogRef = useSyncRefs(internalDialogRef, ref)\n\n  // Validations\n  let hasOpen = props.hasOwnProperty('open') || usesOpenClosedState !== null\n  let hasOnClose = props.hasOwnProperty('onClose')\n  if (!hasOpen && !hasOnClose) {\n    throw new Error(\n      `You have to provide an \\`open\\` and an \\`onClose\\` prop to the \\`Dialog\\` component.`\n    )\n  }\n\n  if (!hasOpen) {\n    throw new Error(\n      `You provided an \\`onClose\\` prop to the \\`Dialog\\`, but forgot an \\`open\\` prop.`\n    )\n  }\n\n  if (!hasOnClose) {\n    throw new Error(\n      `You provided an \\`open\\` prop to the \\`Dialog\\`, but forgot an \\`onClose\\` prop.`\n    )\n  }\n\n  if (typeof open !== 'boolean') {\n    throw new Error(\n      `You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${open}`\n    )\n  }\n\n  if (typeof onClose !== 'function') {\n    throw new Error(\n      `You provided an \\`onClose\\` prop to the \\`Dialog\\`, but the value is not a function. Received: ${onClose}`\n    )\n  }\n  let dialogState = open ? DialogStates.Open : DialogStates.Closed\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return dialogState === DialogStates.Open\n  })()\n\n  let [state, dispatch] = useReducer(stateReducer, {\n    titleId: null,\n    descriptionId: null,\n  } as StateDefinition)\n\n  let close = useCallback(() => onClose(false), [onClose])\n\n  let setTitleId = useCallback(\n    (id: string | null) => dispatch({ type: ActionTypes.SetTitleId, id }),\n    [dispatch]\n  )\n\n  let ready = useServerHandoffComplete()\n  let enabled = ready && dialogState === DialogStates.Open\n  let hasNestedDialogs = nestedDialogCount > 1 // 1 is the current dialog\n  let hasParentDialog = useContext(DialogContext) !== null\n\n  // If there are multiple dialogs, then you can be the root, the leaf or one\n  // in between. We only care abou whether you are the top most one or not.\n  let position = !hasNestedDialogs ? 'leaf' : 'parent'\n\n  useFocusTrap(\n    internalDialogRef,\n    enabled\n      ? match(position, {\n          parent: FocusTrapFeatures.RestoreFocus,\n          leaf: FocusTrapFeatures.All,\n        })\n      : FocusTrapFeatures.None,\n    { initialFocus, containers }\n  )\n  useInertOthers(internalDialogRef, hasNestedDialogs ? enabled : false)\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (dialogState !== DialogStates.Open) return\n    if (hasNestedDialogs) return\n    if (internalDialogRef.current?.contains(target)) return\n\n    close()\n  })\n\n  // Handle `Escape` to close\n  useWindowEvent('keydown', event => {\n    if (event.key !== Keys.Escape) return\n    if (dialogState !== DialogStates.Open) return\n    if (hasNestedDialogs) return\n    event.preventDefault()\n    event.stopPropagation()\n    close()\n  })\n\n  // Scroll lock\n  useEffect(() => {\n    if (dialogState !== DialogStates.Open) return\n    if (hasParentDialog) return\n\n    let overflow = document.documentElement.style.overflow\n    let paddingRight = document.documentElement.style.paddingRight\n\n    let scrollbarWidth = window.innerWidth - document.documentElement.clientWidth\n\n    document.documentElement.style.overflow = 'hidden'\n    document.documentElement.style.paddingRight = `${scrollbarWidth}px`\n\n    return () => {\n      document.documentElement.style.overflow = overflow\n      document.documentElement.style.paddingRight = paddingRight\n    }\n  }, [dialogState, hasParentDialog])\n\n  // Trigger close when the FocusTrap gets hidden\n  useEffect(() => {\n    if (dialogState !== DialogStates.Open) return\n    if (!internalDialogRef.current) return\n\n    let observer = new IntersectionObserver(entries => {\n      for (let entry of entries) {\n        if (\n          entry.boundingClientRect.x === 0 &&\n          entry.boundingClientRect.y === 0 &&\n          entry.boundingClientRect.width === 0 &&\n          entry.boundingClientRect.height === 0\n        ) {\n          close()\n        }\n      }\n    })\n\n    observer.observe(internalDialogRef.current)\n\n    return () => observer.disconnect()\n  }, [dialogState, internalDialogRef, close])\n\n  let [describedby, DescriptionProvider] = useDescriptions()\n\n  let id = `headlessui-dialog-${useId()}`\n\n  let contextBag = useMemo<ContextType<typeof DialogContext>>(\n    () => [{ dialogState, close, setTitleId }, state],\n    [dialogState, state, close, setTitleId]\n  )\n\n  let slot = useMemo<DialogRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n\n  let propsWeControl = {\n    ref: dialogRef,\n    id,\n    role: 'dialog',\n    'aria-modal': dialogState === DialogStates.Open ? true : undefined,\n    'aria-labelledby': state.titleId,\n    'aria-describedby': describedby,\n    onClick(event: ReactMouseEvent) {\n      event.stopPropagation()\n    },\n  }\n  let passthroughProps = rest\n\n  return (\n    <StackProvider\n      type=\"Dialog\"\n      element={internalDialogRef}\n      onUpdate={useCallback((message, type, element) => {\n        if (type !== 'Dialog') return\n\n        match(message, {\n          [StackMessage.Add]() {\n            containers.current.add(element)\n            setNestedDialogCount(count => count + 1)\n          },\n          [StackMessage.Remove]() {\n            containers.current.add(element)\n            setNestedDialogCount(count => count - 1)\n          },\n        })\n      }, [])}\n    >\n      <ForcePortalRoot force={true}>\n        <Portal>\n          <DialogContext.Provider value={contextBag}>\n            <Portal.Group target={internalDialogRef}>\n              <ForcePortalRoot force={false}>\n                <DescriptionProvider slot={slot} name=\"Dialog.Description\">\n                  {render({\n                    props: { ...passthroughProps, ...propsWeControl },\n                    slot,\n                    defaultTag: DEFAULT_DIALOG_TAG,\n                    features: DialogRenderFeatures,\n                    visible,\n                    name: 'Dialog',\n                  })}\n                </DescriptionProvider>\n              </ForcePortalRoot>\n            </Portal.Group>\n          </DialogContext.Provider>\n        </Portal>\n      </ForcePortalRoot>\n    </StackProvider>\n  )\n})\n\n// ---\n\nlet DEFAULT_OVERLAY_TAG = 'div' as const\ninterface OverlayRenderPropArg {\n  open: boolean\n}\ntype OverlayPropsWeControl = 'id' | 'aria-hidden' | 'onClick'\n\nlet Overlay = forwardRefWithAs(function Overlay<\n  TTag extends ElementType = typeof DEFAULT_OVERLAY_TAG\n>(props: Props<TTag, OverlayRenderPropArg, OverlayPropsWeControl>, ref: Ref<HTMLDivElement>) {\n  let [{ dialogState, close }] = useDialogContext([Dialog.displayName, Overlay.name].join('.'))\n  let overlayRef = useSyncRefs(ref)\n\n  let id = `headlessui-dialog-overlay-${useId()}`\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (event.target !== event.currentTarget) return\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      event.preventDefault()\n      event.stopPropagation()\n      close()\n    },\n    [close]\n  )\n\n  let slot = useMemo<OverlayRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n  let propsWeControl = {\n    ref: overlayRef,\n    id,\n    'aria-hidden': true,\n    onClick: handleClick,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OVERLAY_TAG,\n    name: 'Dialog.Overlay',\n  })\n})\n\n// ---\n\nlet DEFAULT_TITLE_TAG = 'h2' as const\ninterface TitleRenderPropArg {\n  open: boolean\n}\ntype TitlePropsWeControl = 'id'\n\nfunction Title<TTag extends ElementType = typeof DEFAULT_TITLE_TAG>(\n  props: Props<TTag, TitleRenderPropArg, TitlePropsWeControl>\n) {\n  let [{ dialogState, setTitleId }] = useDialogContext([Dialog.displayName, Title.name].join('.'))\n\n  let id = `headlessui-dialog-title-${useId()}`\n\n  useEffect(() => {\n    setTitleId(id)\n    return () => setTitleId(null)\n  }, [id, setTitleId])\n\n  let slot = useMemo<TitleRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n  let propsWeControl = { id }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_TITLE_TAG,\n    name: 'Dialog.Title',\n  })\n}\n\n// ---\n\nexport let Dialog = Object.assign(DialogRoot, { Overlay, Title, Description })\n","import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  let d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  let { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map(value => {\n    let [resolvedValue = 0] = value\n      .split(',')\n      // Remove falsy we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map(v => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => {\n      done(Reason.Finished)\n    }, durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  entered: string[],\n  done?: (reason: Reason) => void\n) {\n  let d = disposables()\n  let _done = done !== undefined ? once(done) : () => {}\n\n  removeClasses(node, ...entered)\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, reason => {\n        removeClasses(node, ...to, ...base)\n        addClasses(node, ...entered)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to, ...entered))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n","export function disposables() {\n  let disposables: Function[] = []\n\n  let api = {\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n  }\n\n  return api\n}\n","export function once<T>(cb: (...args: T[]) => void) {\n  let state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) return\n    state.called = true\n    return cb(...args)\n  }\n}\n","import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { Props } from '../../types'\n\nimport { useId } from '../../hooks/use-id'\nimport { useIsInitialRender } from '../../hooks/use-is-initial-render'\nimport { match } from '../../utils/match'\nimport { useIsMounted } from '../../hooks/use-is-mounted'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\nimport { Features, PropsForFeatures, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\nimport { OpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\n\ntype ID = ReturnType<typeof useId>\n\nfunction useSplitClasses(classes: string = '') {\n  return useMemo(() => classes.split(' ').filter(className => className.trim().length > 1), [\n    classes,\n  ])\n}\n\ninterface TransitionContextValues {\n  show: boolean\n  appear: boolean\n  initial: boolean\n}\nlet TransitionContext = createContext<TransitionContextValues | null>(null)\nTransitionContext.displayName = 'TransitionContext'\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nexport interface TransitionClasses {\n  enter?: string\n  enterFrom?: string\n  enterTo?: string\n  entered?: string\n  leave?: string\n  leaveFrom?: string\n  leaveTo?: string\n}\n\nexport interface TransitionEvents {\n  beforeEnter?: () => void\n  afterEnter?: () => void\n  beforeLeave?: () => void\n  afterLeave?: () => void\n}\n\ntype TransitionChildProps<TTag> = Props<TTag, TransitionChildRenderPropArg> &\n  PropsForFeatures<typeof TransitionChildRenderFeatures> &\n  TransitionClasses &\n  TransitionEvents & { appear?: boolean }\n\nfunction useTransitionContext() {\n  let context = useContext(TransitionContext)\n\n  if (context === null) {\n    throw new Error(\n      'A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.'\n    )\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = useContext(NestingContext)\n\n  if (context === null) {\n    throw new Error(\n      'A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.'\n    )\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: MutableRefObject<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = createContext<NestingContextValues | null>(null)\nNestingContext.displayName = 'NestingContext'\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.current.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let doneRef = useRef(done)\n  let transitionableChildren = useRef<NestingContextValues['children']['current']>([])\n  let mounted = useIsMounted()\n\n  useEffect(() => {\n    doneRef.current = done\n  }, [done])\n\n  let unregister = useCallback(\n    (childId: ID, strategy = RenderStrategy.Hidden) => {\n      let idx = transitionableChildren.current.findIndex(({ id }) => id === childId)\n      if (idx === -1) return\n\n      match(strategy, {\n        [RenderStrategy.Unmount]() {\n          transitionableChildren.current.splice(idx, 1)\n        },\n        [RenderStrategy.Hidden]() {\n          transitionableChildren.current[idx].state = TreeStates.Hidden\n        },\n      })\n\n      if (!hasChildren(transitionableChildren) && mounted.current) {\n        doneRef.current?.()\n      }\n    },\n    [doneRef, mounted, transitionableChildren]\n  )\n\n  let register = useCallback(\n    (childId: ID) => {\n      let child = transitionableChildren.current.find(({ id }) => id === childId)\n      if (!child) {\n        transitionableChildren.current.push({ id: childId, state: TreeStates.Visible })\n      } else if (child.state !== TreeStates.Visible) {\n        child.state = TreeStates.Visible\n      }\n\n      return () => unregister(childId, RenderStrategy.Unmount)\n    },\n    [transitionableChildren, unregister]\n  )\n\n  return useMemo(\n    () => ({\n      children: transitionableChildren,\n      register,\n      unregister,\n    }),\n    [register, unregister, transitionableChildren]\n  )\n}\n\nfunction noop() {}\nlet eventNames = ['beforeEnter', 'afterEnter', 'beforeLeave', 'afterLeave'] as const\nfunction ensureEventHooksExist(events: TransitionEvents) {\n  let result = {} as Record<keyof typeof events, () => void>\n  for (let name of eventNames) {\n    result[name] = events[name] ?? noop\n  }\n  return result\n}\n\nfunction useEvents(events: TransitionEvents) {\n  let eventsRef = useRef(ensureEventHooksExist(events))\n\n  useEffect(() => {\n    eventsRef.current = ensureEventHooksExist(events)\n  }, [events])\n\n  return eventsRef\n}\n\n// ---\n\nlet DEFAULT_TRANSITION_CHILD_TAG = 'div' as const\ntype TransitionChildRenderPropArg = MutableRefObject<HTMLDivElement>\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nfunction TransitionChild<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag>\n) {\n  let {\n    // Event \"handlers\"\n    beforeEnter,\n    afterEnter,\n    beforeLeave,\n    afterLeave,\n\n    // Class names\n    enter,\n    enterFrom,\n    enterTo,\n    entered,\n    leave,\n    leaveFrom,\n    leaveTo,\n\n    // @ts-expect-error\n    ...rest\n  } = props as typeof props\n  let container = useRef<HTMLElement | null>(null)\n  let [state, setState] = useState(TreeStates.Visible)\n  let strategy = rest.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n  let { show, appear, initial } = useTransitionContext()\n  let { register, unregister } = useParentNesting()\n\n  let id = useId()\n\n  let isTransitioning = useRef(false)\n\n  let nesting = useNesting(() => {\n    // When all children have been unmounted we can only hide ourselves if and only if we are not\n    // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n    if (!isTransitioning.current) {\n      setState(TreeStates.Hidden)\n      unregister(id)\n      events.current.afterLeave()\n    }\n  })\n\n  useIsoMorphicEffect(() => {\n    if (!id) return\n    return register(id)\n  }, [register, id])\n\n  useIsoMorphicEffect(() => {\n    // If we are in another mode than the Hidden mode then ignore\n    if (strategy !== RenderStrategy.Hidden) return\n    if (!id) return\n\n    // Make sure that we are visible\n    if (show && state !== TreeStates.Visible) {\n      setState(TreeStates.Visible)\n      return\n    }\n\n    match(state, {\n      [TreeStates.Hidden]: () => unregister(id),\n      [TreeStates.Visible]: () => register(id),\n    })\n  }, [state, id, register, unregister, show, strategy])\n\n  let enterClasses = useSplitClasses(enter)\n  let enterFromClasses = useSplitClasses(enterFrom)\n  let enterToClasses = useSplitClasses(enterTo)\n\n  let enteredClasses = useSplitClasses(entered)\n\n  let leaveClasses = useSplitClasses(leave)\n  let leaveFromClasses = useSplitClasses(leaveFrom)\n  let leaveToClasses = useSplitClasses(leaveTo)\n\n  let events = useEvents({ beforeEnter, afterEnter, beforeLeave, afterLeave })\n\n  let ready = useServerHandoffComplete()\n\n  useEffect(() => {\n    if (ready && state === TreeStates.Visible && container.current === null) {\n      throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n    }\n  }, [container, state, ready])\n\n  // Skipping initial transition\n  let skip = initial && !appear\n\n  useIsoMorphicEffect(() => {\n    let node = container.current\n    if (!node) return\n    if (skip) return\n\n    isTransitioning.current = true\n\n    if (show) events.current.beforeEnter()\n    if (!show) events.current.beforeLeave()\n\n    return show\n      ? transition(node, enterClasses, enterFromClasses, enterToClasses, enteredClasses, reason => {\n          isTransitioning.current = false\n          if (reason === Reason.Finished) events.current.afterEnter()\n        })\n      : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, enteredClasses, reason => {\n          isTransitioning.current = false\n\n          if (reason !== Reason.Finished) return\n\n          // When we don't have children anymore we can safely unregister from the parent and hide\n          // ourselves.\n          if (!hasChildren(nesting)) {\n            setState(TreeStates.Hidden)\n            unregister(id)\n            events.current.afterLeave()\n          }\n        })\n  }, [\n    events,\n    id,\n    isTransitioning,\n    unregister,\n    nesting,\n    container,\n    skip,\n    show,\n    enterClasses,\n    enterFromClasses,\n    enterToClasses,\n    leaveClasses,\n    leaveFromClasses,\n    leaveToClasses,\n  ])\n\n  let propsWeControl = { ref: container }\n  let passthroughProps = rest\n\n  return (\n    <NestingContext.Provider value={nesting}>\n      <OpenClosedProvider\n        value={match(state, {\n          [TreeStates.Visible]: State.Open,\n          [TreeStates.Hidden]: State.Closed,\n        })}\n      >\n        {render({\n          props: { ...passthroughProps, ...propsWeControl },\n          defaultTag: DEFAULT_TRANSITION_CHILD_TAG,\n          features: TransitionChildRenderFeatures,\n          visible: state === TreeStates.Visible,\n          name: 'Transition.Child',\n        })}\n      </OpenClosedProvider>\n    </NestingContext.Provider>\n  )\n}\n\nexport function Transition<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag> & { show?: boolean; appear?: boolean }\n) {\n  // @ts-expect-error\n  let { show, appear = false, unmount, ...passthroughProps } = props as typeof props\n\n  let usesOpenClosedState = useOpenClosed()\n\n  if (show === undefined && usesOpenClosedState !== null) {\n    show = match(usesOpenClosedState, {\n      [State.Open]: true,\n      [State.Closed]: false,\n    })\n  }\n\n  if (![true, false].includes((show as unknown) as boolean)) {\n    throw new Error('A <Transition /> is used but it is missing a `show={true | false}` prop.')\n  }\n\n  let [state, setState] = useState(show ? TreeStates.Visible : TreeStates.Hidden)\n\n  let nestingBag = useNesting(() => {\n    setState(TreeStates.Hidden)\n  })\n\n  let initial = useIsInitialRender()\n  let transitionBag = useMemo<TransitionContextValues>(\n    () => ({ show: show as boolean, appear: appear || !initial, initial }),\n    [show, appear, initial]\n  )\n\n  useEffect(() => {\n    if (show) {\n      setState(TreeStates.Visible)\n    } else if (!hasChildren(nestingBag)) {\n      setState(TreeStates.Hidden)\n    }\n  }, [show, nestingBag])\n\n  let sharedProps = { unmount }\n\n  return (\n    <NestingContext.Provider value={nestingBag}>\n      <TransitionContext.Provider value={transitionBag}>\n        {render({\n          props: {\n            ...sharedProps,\n            as: Fragment,\n            children: <TransitionChild {...sharedProps} {...passthroughProps} />,\n          },\n          defaultTag: Fragment,\n          features: TransitionChildRenderFeatures,\n          visible: state === TreeStates.Visible,\n          name: 'Transition',\n        })}\n      </TransitionContext.Provider>\n    </NestingContext.Provider>\n  )\n}\n\nTransition.Child = function Child<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag>\n) {\n  let hasTransitionContext = useContext(TransitionContext) !== null\n  let hasOpenClosedContext = useOpenClosed() !== null\n\n  return !hasTransitionContext && hasOpenClosedContext ? (\n    <Transition {...props} />\n  ) : (\n    <TransitionChild {...props} />\n  )\n}\nTransition.Root = Transition\n","import { useRef, useEffect } from 'react'\n\nexport function useIsInitialRender() {\n  let initial = useRef(true)\n\n  useEffect(() => {\n    initial.current = false\n  }, [])\n\n  return initial.current\n}\n","import { useState } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\nimport { useServerHandoffComplete } from './use-server-handoff-complete'\n\n// We used a \"simple\" approach first which worked for SSR and rehydration on the client. However we\n// didn't take care of the Suspense case. To fix this we used the approach the @reach-ui/auto-id\n// uses.\n//\n// Credits: https://github.com/reach/reach-ui/blob/develop/packages/auto-id/src/index.tsx\n\nlet id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  let ready = useServerHandoffComplete()\n  let [id, setId] = useState(ready ? generateId : null)\n\n  useIsoMorphicEffect(() => {\n    if (id === null) setId(generateId())\n  }, [id])\n\n  return id != null ? '' + id : undefined\n}\n","import { useRef, useEffect } from 'react'\n\nexport function useIsMounted() {\n  let mounted = useRef(false)\n\n  useEffect(() => {\n    mounted.current = true\n\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  return mounted\n}\n","import { useLayoutEffect, useEffect } from 'react'\n\nexport const useIsoMorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useState, useEffect } from 'react'\n\nlet state = { serverHandoffComplete: false }\n\nexport function useServerHandoffComplete() {\n  let [serverHandoffComplete, setServerHandoffComplete] = useState(state.serverHandoffComplete)\n\n  useEffect(() => {\n    if (serverHandoffComplete === true) return\n\n    setServerHandoffComplete(true)\n  }, [serverHandoffComplete])\n\n  useEffect(() => {\n    if (state.serverHandoffComplete === false) state.serverHandoffComplete = true\n  }, [])\n\n  return serverHandoffComplete\n}\n","import React, {\n  createContext,\n  useContext,\n\n  // Types\n  ReactNode,\n  ReactElement,\n} from 'react'\n\nlet Context = createContext<State | null>(null)\nContext.displayName = 'OpenClosedContext'\n\nexport enum State {\n  Open,\n  Closed,\n}\n\nexport function useOpenClosed() {\n  return useContext(Context)\n}\n\ninterface Props {\n  value: State\n  children: ReactNode\n}\n\nexport function OpenClosedProvider({ value, children }: Props): ReactElement {\n  return <Context.Provider value={value}>{children}</Context.Provider>\n}\n","export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n","import {\n  Fragment,\n  cloneElement,\n  createElement,\n  forwardRef,\n  isValidElement,\n\n  // Types\n  ElementType,\n  ReactElement,\n} from 'react'\nimport { Props, XOR, __, Expand } from '../types'\nimport { match } from './match'\n\nexport enum Features {\n  /** No features at all */\n  None = 0,\n\n  /**\n   * When used, this will allow us to use one of the render strategies.\n   *\n   * **The render strategies are:**\n   *    - **Unmount**   _(Will unmount the component.)_\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\n   */\n  RenderStrategy = 1,\n\n  /**\n   * When used, this will allow the user of our component to be in control. This can be used when\n   * you want to transition based on some state.\n   */\n  Static = 2,\n}\n\nexport enum RenderStrategy {\n  Unmount,\n  Hidden,\n}\n\ntype PropsForFeature<TPassedInFeatures extends Features, TForFeature extends Features, TProps> = {\n  [P in TPassedInFeatures]: P extends TForFeature ? TProps : __\n}[TPassedInFeatures]\n\nexport type PropsForFeatures<T extends Features> = XOR<\n  PropsForFeature<T, Features.Static, { static?: boolean }>,\n  PropsForFeature<T, Features.RenderStrategy, { unmount?: boolean }>\n>\n\nexport function render<TFeature extends Features, TTag extends ElementType, TSlot>({\n  props,\n  slot,\n  defaultTag,\n  features,\n  visible = true,\n  name,\n}: {\n  props: Expand<Props<TTag, TSlot, any> & PropsForFeatures<TFeature>>\n  slot?: TSlot\n  defaultTag: ElementType\n  features?: TFeature\n  visible?: boolean\n  name: string\n}) {\n  // Visible always render\n  if (visible) return _render(props, slot, defaultTag, name)\n\n  let featureFlags = features ?? Features.None\n\n  if (featureFlags & Features.Static) {\n    let { static: isStatic = false, ...rest } = props as PropsForFeatures<Features.Static>\n\n    // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n    if (isStatic) return _render(rest, slot, defaultTag, name)\n  }\n\n  if (featureFlags & Features.RenderStrategy) {\n    let { unmount = true, ...rest } = props as PropsForFeatures<Features.RenderStrategy>\n    let strategy = unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n    return match(strategy, {\n      [RenderStrategy.Unmount]() {\n        return null\n      },\n      [RenderStrategy.Hidden]() {\n        return _render(\n          { ...rest, ...{ hidden: true, style: { display: 'none' } } },\n          slot,\n          defaultTag,\n          name\n        )\n      },\n    })\n  }\n\n  // No features enabled, just render\n  return _render(props, slot, defaultTag, name)\n}\n\nfunction _render<TTag extends ElementType, TSlot>(\n  props: Props<TTag, TSlot> & { ref?: unknown },\n  slot: TSlot = {} as TSlot,\n  tag: ElementType,\n  name: string\n) {\n  let { as: Component = tag, children, refName = 'ref', ...passThroughProps } = omit(props, [\n    'unmount',\n    'static',\n  ])\n\n  // This allows us to use `<HeadlessUIComponent as={MyComponent} refName=\"innerRef\" />`\n  let refRelatedProps = props.ref !== undefined ? { [refName]: props.ref } : {}\n\n  let resolvedChildren = (typeof children === 'function' ? children(slot) : children) as\n    | ReactElement\n    | ReactElement[]\n\n  // Allow for className to be a function with the slot as the contents\n  if (passThroughProps.className && typeof passThroughProps.className === 'function') {\n    ;(passThroughProps as any).className = passThroughProps.className(slot)\n  }\n\n  if (Component === Fragment) {\n    if (Object.keys(passThroughProps).length > 0) {\n      if (\n        !isValidElement(resolvedChildren) ||\n        (Array.isArray(resolvedChildren) && resolvedChildren.length > 1)\n      ) {\n        throw new Error(\n          [\n            'Passing props on \"Fragment\"!',\n            '',\n            `The current component <${name} /> is rendering a \"Fragment\".`,\n            `However we need to passthrough the following props:`,\n            Object.keys(passThroughProps)\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n            '',\n            'You can apply a few solutions:',\n            [\n              'Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"Fragment\".',\n              'Render a single element as the child so that we can forward the props onto that element.',\n            ]\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n          ].join('\\n')\n        )\n      }\n\n      return cloneElement(\n        resolvedChildren,\n        Object.assign(\n          {},\n          // Filter out undefined values so that they don't override the existing values\n          mergeEventFunctions(compact(omit(passThroughProps, ['ref'])), resolvedChildren.props, [\n            'onClick',\n          ]),\n          refRelatedProps\n        )\n      )\n    }\n  }\n\n  return createElement(\n    Component,\n    Object.assign({}, omit(passThroughProps, ['ref']), Component !== Fragment && refRelatedProps),\n    resolvedChildren\n  )\n}\n\n/**\n * We can use this function for the following useCase:\n *\n * <Menu.Item> <button onClick={console.log} /> </Menu.Item>\n *\n * Our `Menu.Item` will have an internal `onClick`, if you passthrough an `onClick` to the actual\n * `Menu.Item` component we will call it correctly. However, when we have an `onClick` on the actual\n * first child, that one should _also_ be called (but before this implementation, it was just\n * overriding the `onClick`). But it is only when we *render* that we have access to the existing\n * props of this component.\n *\n * It's a bit hacky, and not that clean, but it is something internal and we have tests to rely on\n * so that we can refactor this later (if needed).\n */\nfunction mergeEventFunctions(\n  passThroughProps: Record<string, any>,\n  existingProps: Record<string, any>,\n  functionsToMerge: string[]\n) {\n  let clone = Object.assign({}, passThroughProps)\n  for (let func of functionsToMerge) {\n    if (passThroughProps[func] !== undefined && existingProps[func] !== undefined) {\n      Object.assign(clone, {\n        [func](event: { defaultPrevented: boolean }) {\n          // Props we control\n          if (!event.defaultPrevented) passThroughProps[func](event)\n\n          // Existing props on the component\n          if (!event.defaultPrevented) existingProps[func](event)\n        },\n      })\n    }\n  }\n\n  return clone\n}\n\n/**\n * This is a hack, but basically we want to keep the full 'API' of the component, but we do want to\n * wrap it in a forwardRef so that we _can_ passthrough the ref\n */\nexport function forwardRefWithAs<T extends { name: string; displayName?: string }>(\n  component: T\n): T & { displayName: string } {\n  return Object.assign(forwardRef((component as unknown) as any) as any, {\n    displayName: component.displayName ?? component.name,\n  })\n}\n\nfunction compact<T extends Record<any, any>>(object: T) {\n  let clone = Object.assign({}, object)\n  for (let key in clone) {\n    if (clone[key] === undefined) delete clone[key]\n  }\n  return clone\n}\n\nfunction omit<T extends Record<any, any>>(object: T, keysToOmit: string[] = []) {\n  let clone = Object.assign({}, object)\n  for (let key of keysToOmit) {\n    if (key in clone) delete clone[key]\n  }\n  return clone\n}\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as React from \"react\";\n\nfunction AdjustmentsIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\"\n  }));\n}\n\nexport default AdjustmentsIcon;","import * as React from \"react\";\n\nfunction ArchiveIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\"\n  }));\n}\n\nexport default ArchiveIcon;","import * as React from \"react\";\n\nfunction BackspaceIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M12 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M3 12l6.414 6.414a2 2 0 001.414.586H19a2 2 0 002-2V7a2 2 0 00-2-2h-8.172a2 2 0 00-1.414.586L3 12z\"\n  }));\n}\n\nexport default BackspaceIcon;","import * as React from \"react\";\n\nfunction ChevronRightIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M9 5l7 7-7 7\"\n  }));\n}\n\nexport default ChevronRightIcon;","import * as React from \"react\";\n\nfunction CogIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n  }));\n}\n\nexport default CogIcon;","import * as React from \"react\";\n\nfunction PresentationChartBarIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M8 13v-1m4 1v-3m4 3V8M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\"\n  }));\n}\n\nexport default PresentationChartBarIcon;","import * as React from \"react\";\n\nfunction QuestionMarkCircleIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n  }));\n}\n\nexport default QuestionMarkCircleIcon;","import * as React from \"react\";\n\nfunction XCircleIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n  }));\n}\n\nexport default XCircleIcon;"],"names":["Keys","useSyncRefs","refs","cache","useRef","useEffect","useCallback","ref","isDisabledReactIssue7711","element","parent","legend","isParentDisabled","previous","isFirstLegend","useWindowEvent","type","listener","options","listenerRef","window","Focus","FocusResult","FocusableMode","focusableSelector","selector","focusElement","preventScroll","focusIn","container","focus","elements","Array","position","a","Node","document","body","getFocusableElements","active","direction","Direction","Error","startIndex","Math","focusOptions","offset","total","next","nextIdx","Features","useFocusTrap","features","All","initialFocus","containers","restoreElement","previousActiveElement","mounted","useIsMounted","featuresRestoreFocus","Boolean","featuresInitialFocus","activeElement","First","console","event","Tab","Previous","Next","WrapAround","Success","allContainers","Set","toElement","contains","interactables","originals","inert","restore","original","ForcePortalRootContext","createContext","ForcePortalRoot","props","value","force","usePortalTarget","forceInRoot","useContext","groupTarget","useState","existingRoot","root","target","setTarget","DEFAULT_PORTAL_TAG","Portal","passthroughProps","ready","useServerHandoffComplete","useIsoMorphicEffect","createPortal","render","defaultTag","name","DEFAULT_GROUP_TAG","PortalGroupContext","DescriptionContext","useDescriptionContext","context","err","StackMessage","StackContext","StackProvider","children","onUpdate","parentUpdate","notify","args","DialogStates","ActionTypes","reducers","state","action","titleId","id","DialogContext","useDialogContext","component","Dialog","stateReducer","match","DialogRenderFeatures","DialogRoot","forwardRefWithAs","open","onClose","rest","nestedDialogCount","setNestedDialogCount","usesOpenClosedState","useOpenClosed","State","internalDialogRef","dialogRef","hasOpen","hasOnClose","dialogState","visible","useReducer","descriptionId","dispatch","close","setTitleId","enabled","hasNestedDialogs","hasParentDialog","FocusTrapFeatures","leaf","child","interactable","useInertOthers","Escape","overflow","paddingRight","scrollbarWidth","observer","IntersectionObserver","entries","entry","descriptionIds","setDescriptionIds","useMemo","register","existing","clone","idx","contextBag","slot","useDescriptions","describedby","DescriptionProvider","useId","Open","propsWeControl","role","onClick","message","Add","count","Remove","React","Group","Overlay","overlayRef","handleClick","Object","Title","Description","passThroughProps","Reason","disposables","api","requestAnimationFrame","raf","cancelAnimationFrame","nextFrame","setTimeout","timer","clearTimeout","add","dispose","addClasses","node","classes","removeClasses","transition","base","from","to","entered","done","d","_done","cb","called","once","getComputedStyle","transitionDuration","transitionDelay","map","v","parseFloat","z","resolvedValue","durationMs","delaysMs","waitForTransition","reason","useSplitClasses","className","TransitionContext","TreeStates","NestingContext","hasChildren","bag","useNesting","doneRef","transitionableChildren","unregister","strategy","RenderStrategy","Visible","childId","noop","eventNames","ensureEventHooksExist","events","result","TransitionChildRenderFeatures","TransitionChild","beforeEnter","afterEnter","beforeLeave","afterLeave","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","setState","useTransitionContext","show","appear","initial","useParentNesting","isTransitioning","nesting","enterClasses","enterFromClasses","enterToClasses","enteredClasses","leaveClasses","leaveFromClasses","leaveToClasses","eventsRef","useEvents","skip","Finished","Transition","unmount","includes","nestingBag","useIsInitialRender","transitionBag","sharedProps","as","hasTransitionContext","hasOpenClosedContext","generateId","setId","serverHandoffComplete","setServerHandoffComplete","Context","OpenClosedProvider","lookup","returnValue","error","key","_render","featureFlags","isStatic","hidden","style","display","omit","Component","tag","refName","refRelatedProps","resolvedChildren","isValidElement","line","cloneElement","func","existingProps","mergeEventFunctions","compact","createElement","forwardRef","displayName","keysToOmit","require","getNative","module","exports","_toConsumableArray","arr","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","assign","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth"],"sourceRoot":""}